//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intervent.HWS.OrderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestedProcedure", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class RequestedProcedure : Intervent.HWS.OrderService.ProcedureBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.RequestedProcedureAnswer[] AoeAnswersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.RequestedProcedureAnswer[] AoeAnswers {
            get {
                return this.AoeAnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AoeAnswersField, value) != true)) {
                    this.AoeAnswersField = value;
                    this.RaisePropertyChanged("AoeAnswers");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.RequestedProcedureAnswer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Requisition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Clinician))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Diagnosis))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Subscriber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Guarantor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Practice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Insurance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.PatientBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Patient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.PatientInsurance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Aoe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AoeAnswer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AoeWithResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.UserContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ABNInputDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureOrderable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.RequestedProcedure))]
    public partial class BaseObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestedProcedureAnswer", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class RequestedProcedureAnswer : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AoeCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AoeCode {
            get {
                return this.AoeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AoeCodeField, value) != true)) {
                    this.AoeCodeField = value;
                    this.RaisePropertyChanged("AoeCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Requisition", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Requisition : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Clinician[] CcClinicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollectedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> CollectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Diagnosis[] DiagnosisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Clinician OrderingClinicanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Patient PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.ProcedureWithAoe[] ProcedureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingType {
            get {
                return this.BillingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingTypeField, value) != true)) {
                    this.BillingTypeField = value;
                    this.RaisePropertyChanged("BillingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Clinician[] CcClinician {
            get {
                return this.CcClinicianField;
            }
            set {
                if ((object.ReferenceEquals(this.CcClinicianField, value) != true)) {
                    this.CcClinicianField = value;
                    this.RaisePropertyChanged("CcClinician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAccountNumber {
            get {
                return this.ClientAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAccountNumberField, value) != true)) {
                    this.ClientAccountNumberField = value;
                    this.RaisePropertyChanged("ClientAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectedBy {
            get {
                return this.CollectedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectedByField, value) != true)) {
                    this.CollectedByField = value;
                    this.RaisePropertyChanged("CollectedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Diagnosis[] Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderNumber {
            get {
                return this.OrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderNumberField, value) != true)) {
                    this.OrderNumberField = value;
                    this.RaisePropertyChanged("OrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Clinician OrderingClinican {
            get {
                return this.OrderingClinicanField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderingClinicanField, value) != true)) {
                    this.OrderingClinicanField = value;
                    this.RaisePropertyChanged("OrderingClinican");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Priority {
            get {
                return this.PriorityField;
            }
            set {
                if ((object.ReferenceEquals(this.PriorityField, value) != true)) {
                    this.PriorityField = value;
                    this.RaisePropertyChanged("Priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.ProcedureWithAoe[] Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clinician", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Clinician : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Npi {
            get {
                return this.NpiField;
            }
            set {
                if ((object.ReferenceEquals(this.NpiField, value) != true)) {
                    this.NpiField = value;
                    this.RaisePropertyChanged("Npi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Upin {
            get {
                return this.UpinField;
            }
            set {
                if ((object.ReferenceEquals(this.UpinField, value) != true)) {
                    this.UpinField = value;
                    this.RaisePropertyChanged("Upin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Diagnosis", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Diagnosis : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.DiagnosisType DiagnosisTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.DiagnosisType DiagnosisType {
            get {
                return this.DiagnosisTypeField;
            }
            set {
                if ((this.DiagnosisTypeField.Equals(value) != true)) {
                    this.DiagnosisTypeField = value;
                    this.RaisePropertyChanged("DiagnosisType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Subscriber))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Guarantor))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Practice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Insurance))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.PatientBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Patient))]
    public partial class Address : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine1 {
            get {
                return this.StreetLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine1Field, value) != true)) {
                    this.StreetLine1Field = value;
                    this.RaisePropertyChanged("StreetLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine2 {
            get {
                return this.StreetLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine2Field, value) != true)) {
                    this.StreetLine2Field = value;
                    this.RaisePropertyChanged("StreetLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subscriber", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Guarantor))]
    public partial class Subscriber : Intervent.HWS.OrderService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelationshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployerName {
            get {
                return this.EmployerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployerNameField, value) != true)) {
                    this.EmployerNameField = value;
                    this.RaisePropertyChanged("EmployerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Relationship {
            get {
                return this.RelationshipField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipField, value) != true)) {
                    this.RelationshipField = value;
                    this.RaisePropertyChanged("Relationship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Guarantor", Namespace="http://entity.halfpenny")]
    [System.SerializableAttribute()]
    public partial class Guarantor : Intervent.HWS.OrderService.Subscriber {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Practice", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Practice : Intervent.HWS.OrderService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeZoneOffsetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeZoneOffset {
            get {
                return this.TimeZoneOffsetField;
            }
            set {
                if ((this.TimeZoneOffsetField.Equals(value) != true)) {
                    this.TimeZoneOffsetField = value;
                    this.RaisePropertyChanged("TimeZoneOffset");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Insurance", Namespace="http://entity.halfpenny")]
    [System.SerializableAttribute()]
    public partial class Insurance : Intervent.HWS.OrderService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.InsuranceType InsuranceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerInsuranceCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.InsuranceType InsuranceType {
            get {
                return this.InsuranceTypeField;
            }
            set {
                if ((this.InsuranceTypeField.Equals(value) != true)) {
                    this.InsuranceTypeField = value;
                    this.RaisePropertyChanged("InsuranceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerInsuranceCode {
            get {
                return this.PlacerInsuranceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerInsuranceCodeField, value) != true)) {
                    this.PlacerInsuranceCodeField = value;
                    this.RaisePropertyChanged("PlacerInsuranceCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientBase", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Patient))]
    public partial class PatientBase : Intervent.HWS.OrderService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EthnicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaidenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerPatientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPatientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bed {
            get {
                return this.BedField;
            }
            set {
                if ((object.ReferenceEquals(this.BedField, value) != true)) {
                    this.BedField = value;
                    this.RaisePropertyChanged("Bed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNumber {
            get {
                return this.BillingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNumberField, value) != true)) {
                    this.BillingNumberField = value;
                    this.RaisePropertyChanged("BillingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ethnicity {
            get {
                return this.EthnicityField;
            }
            set {
                if ((object.ReferenceEquals(this.EthnicityField, value) != true)) {
                    this.EthnicityField = value;
                    this.RaisePropertyChanged("Ethnicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaidenName {
            get {
                return this.MaidenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaidenNameField, value) != true)) {
                    this.MaidenNameField = value;
                    this.RaisePropertyChanged("MaidenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePrefix {
            get {
                return this.NamePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.NamePrefixField, value) != true)) {
                    this.NamePrefixField = value;
                    this.RaisePropertyChanged("NamePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerPatientCode {
            get {
                return this.PlacerPatientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerPatientCodeField, value) != true)) {
                    this.PlacerPatientCodeField = value;
                    this.RaisePropertyChanged("PlacerPatientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryLanguage {
            get {
                return this.PrimaryLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryLanguageField, value) != true)) {
                    this.PrimaryLanguageField = value;
                    this.RaisePropertyChanged("PrimaryLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPatientCode {
            get {
                return this.SenderPatientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPatientCodeField, value) != true)) {
                    this.SenderPatientCodeField = value;
                    this.RaisePropertyChanged("SenderPatientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Patient : Intervent.HWS.OrderService.PatientBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Guarantor PrimaryGuarantorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.PatientInsurance PrimaryInsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.PatientInsurance SecondaryInsuranceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Guarantor PrimaryGuarantor {
            get {
                return this.PrimaryGuarantorField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryGuarantorField, value) != true)) {
                    this.PrimaryGuarantorField = value;
                    this.RaisePropertyChanged("PrimaryGuarantor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.PatientInsurance PrimaryInsurance {
            get {
                return this.PrimaryInsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryInsuranceField, value) != true)) {
                    this.PrimaryInsuranceField = value;
                    this.RaisePropertyChanged("PrimaryInsurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.PatientInsurance SecondaryInsurance {
            get {
                return this.SecondaryInsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryInsuranceField, value) != true)) {
                    this.SecondaryInsuranceField = value;
                    this.RaisePropertyChanged("SecondaryInsurance");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientInsurance", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class PatientInsurance : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Insurance InsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicaidNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlanCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Subscriber SubscriberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Insurance Insurance {
            get {
                return this.InsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceField, value) != true)) {
                    this.InsuranceField = value;
                    this.RaisePropertyChanged("Insurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicaidNumber {
            get {
                return this.MedicaidNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicaidNumberField, value) != true)) {
                    this.MedicaidNumberField = value;
                    this.RaisePropertyChanged("MedicaidNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicareNumber {
            get {
                return this.MedicareNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareNumberField, value) != true)) {
                    this.MedicareNumberField = value;
                    this.RaisePropertyChanged("MedicareNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlanCode {
            get {
                return this.PlanCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlanCodeField, value) != true)) {
                    this.PlanCodeField = value;
                    this.RaisePropertyChanged("PlanCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Subscriber Subscriber {
            get {
                return this.SubscriberField;
            }
            set {
                if ((object.ReferenceEquals(this.SubscriberField, value) != true)) {
                    this.SubscriberField = value;
                    this.RaisePropertyChanged("Subscriber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Aoe", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AoeWithResponse))]
    public partial class Aoe : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.AoeAnswer[] AnswerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRequiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.AoeAnswer[] AnswerList {
            get {
                return this.AnswerListField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerListField, value) != true)) {
                    this.AnswerListField = value;
                    this.RaisePropertyChanged("AnswerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRequired {
            get {
                return this.IsRequiredField;
            }
            set {
                if ((this.IsRequiredField.Equals(value) != true)) {
                    this.IsRequiredField = value;
                    this.RaisePropertyChanged("IsRequired");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AoeAnswer", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class AoeAnswer : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AoeWithResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class AoeWithResponse : Intervent.HWS.OrderService.Aoe {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserContext", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class UserContext : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerUserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerUserId {
            get {
                return this.PlacerUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerUserIdField, value) != true)) {
                    this.PlacerUserIdField = value;
                    this.RaisePropertyChanged("PlacerUserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class File : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((object.ReferenceEquals(this.BytesField, value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ABNInputDTO", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service.Legacy")]
    [System.SerializableAttribute()]
    public partial class ABNInputDTO : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Medicare_NumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientMiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestInputDataXMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medicare_Num {
            get {
                return this.Medicare_NumField;
            }
            set {
                if ((object.ReferenceEquals(this.Medicare_NumField, value) != true)) {
                    this.Medicare_NumField = value;
                    this.RaisePropertyChanged("Medicare_Num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientMiddleName {
            get {
                return this.PatientMiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientMiddleNameField, value) != true)) {
                    this.PatientMiddleNameField = value;
                    this.RaisePropertyChanged("PatientMiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestInputDataXML {
            get {
                return this.TestInputDataXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.TestInputDataXMLField, value) != true)) {
                    this.TestInputDataXMLField = value;
                    this.RaisePropertyChanged("TestInputDataXML");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcedureBase", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.Procedure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureWithAoe))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureOrderable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.RequestedProcedure))]
    public partial class ProcedureBase : Intervent.HWS.OrderService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcedureOrderable", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ProcedureOrderable : Intervent.HWS.OrderService.ProcedureBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOrderableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOrderable {
            get {
                return this.IsOrderableField;
            }
            set {
                if ((this.IsOrderableField.Equals(value) != true)) {
                    this.IsOrderableField = value;
                    this.RaisePropertyChanged("IsOrderable");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Procedure", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureWithAoe))]
    public partial class Procedure : Intervent.HWS.OrderService.ProcedureBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContainerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HandlingRequirementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstructionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoincField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodologyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecimenInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VolumeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Container {
            get {
                return this.ContainerField;
            }
            set {
                if ((object.ReferenceEquals(this.ContainerField, value) != true)) {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HandlingRequirement {
            get {
                return this.HandlingRequirementField;
            }
            set {
                if ((object.ReferenceEquals(this.HandlingRequirementField, value) != true)) {
                    this.HandlingRequirementField = value;
                    this.RaisePropertyChanged("HandlingRequirement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Instruction {
            get {
                return this.InstructionField;
            }
            set {
                if ((object.ReferenceEquals(this.InstructionField, value) != true)) {
                    this.InstructionField = value;
                    this.RaisePropertyChanged("Instruction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loinc {
            get {
                return this.LoincField;
            }
            set {
                if ((object.ReferenceEquals(this.LoincField, value) != true)) {
                    this.LoincField = value;
                    this.RaisePropertyChanged("Loinc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Methodology {
            get {
                return this.MethodologyField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodologyField, value) != true)) {
                    this.MethodologyField = value;
                    this.RaisePropertyChanged("Methodology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecimenInfo {
            get {
                return this.SpecimenInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecimenInfoField, value) != true)) {
                    this.SpecimenInfoField = value;
                    this.RaisePropertyChanged("SpecimenInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.TemperatureField, value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((object.ReferenceEquals(this.VolumeField, value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcedureWithAoe", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ProcedureWithAoe : Intervent.HWS.OrderService.Procedure {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.AoeWithResponse[] AoeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.AoeWithResponse[] Aoe {
            get {
                return this.AoeField;
            }
            set {
                if ((object.ReferenceEquals(this.AoeField, value) != true)) {
                    this.AoeField = value;
                    this.RaisePropertyChanged("Aoe");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiagnosisType", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum DiagnosisType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Icd9 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Icd10 = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceType", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum InsuranceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Commercial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medicare = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Medicaid = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.EchoResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ValidationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AbnResponseByCpt4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AbnResponsePdf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderQueryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.HL7OrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.UriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AoeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.FileResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.MedicalNecessityResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.SubmitOrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureOrderableResponse))]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EchoResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class EchoResponse : Intervent.HWS.OrderService.ServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.PatientBase PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.PatientInsurance PatientInsuranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.ValidationMessage[] ValidationErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.PatientBase Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.PatientInsurance PatientInsurance {
            get {
                return this.PatientInsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientInsuranceField, value) != true)) {
                    this.PatientInsuranceField = value;
                    this.RaisePropertyChanged("PatientInsurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.ValidationMessage[] ValidationError {
            get {
                return this.ValidationErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationErrorField, value) != true)) {
                    this.ValidationErrorField = value;
                    this.RaisePropertyChanged("ValidationError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AbnResponseByCpt4))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AbnResponsePdf))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderQueryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.OrderStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.HL7OrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.UriResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.AoeResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.FileResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.MedicalNecessityResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.SubmitOrderResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.ProcedureOrderableResponse))]
    public partial class ValidationResponse : Intervent.HWS.OrderService.ServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.ValidationMessage[] ValidationErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.ValidationMessage[] ValidationError {
            get {
                return this.ValidationErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationErrorField, value) != true)) {
                    this.ValidationErrorField = value;
                    this.RaisePropertyChanged("ValidationError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbnResponseByCpt4", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service.Legacy")]
    [System.SerializableAttribute()]
    public partial class AbnResponseByCpt4 : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbnResponsePdf", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service.Legacy")]
    [System.SerializableAttribute()]
    public partial class AbnResponsePdf : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class OrderResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Requisition OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.OrderStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Requisition Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.OrderStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderQueryResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class OrderQueryResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.OrderQuery[] SearchResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.OrderQuery[] SearchResult {
            get {
                return this.SearchResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchResultField, value) != true)) {
                    this.SearchResultField = value;
                    this.RaisePropertyChanged("SearchResult");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class OrderStatusResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.OrderStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.OrderStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HL7OrderResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class HL7OrderResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HL7Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.OrderStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HL7 {
            get {
                return this.HL7Field;
            }
            set {
                if ((object.ReferenceEquals(this.HL7Field, value) != true)) {
                    this.HL7Field = value;
                    this.RaisePropertyChanged("HL7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.OrderStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UriResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class UriResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcedureResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class ProcedureResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Procedure ProcedureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Procedure Procedure {
            get {
                return this.ProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcedureField, value) != true)) {
                    this.ProcedureField = value;
                    this.RaisePropertyChanged("Procedure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AoeResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class AoeResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.Aoe[] AoeListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.Aoe[] AoeList {
            get {
                return this.AoeListField;
            }
            set {
                if ((object.ReferenceEquals(this.AoeListField, value) != true)) {
                    this.AoeListField = value;
                    this.RaisePropertyChanged("AoeList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.OrderService.MedicalNecessityResponse))]
    public partial class FileResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.File FileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.File File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicalNecessityResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class MedicalNecessityResponse : Intervent.HWS.OrderService.FileResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> AbnRequiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AbnRequired {
            get {
                return this.AbnRequiredField;
            }
            set {
                if ((this.AbnRequiredField.Equals(value) != true)) {
                    this.AbnRequiredField = value;
                    this.RaisePropertyChanged("AbnRequired");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitOrderResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class SubmitOrderResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HtiOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> OrderDatetimeOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.OrderStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtiOrderNumber {
            get {
                return this.HtiOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.HtiOrderNumberField, value) != true)) {
                    this.HtiOrderNumberField = value;
                    this.RaisePropertyChanged("HtiOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> OrderDatetimeOffset {
            get {
                return this.OrderDatetimeOffsetField;
            }
            set {
                if ((this.OrderDatetimeOffsetField.Equals(value) != true)) {
                    this.OrderDatetimeOffsetField = value;
                    this.RaisePropertyChanged("OrderDatetimeOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.OrderStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcedureOrderableResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class ProcedureOrderableResponse : Intervent.HWS.OrderService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.OrderService.ProcedureOrderable[] ProceduresField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.OrderService.ProcedureOrderable[] Procedures {
            get {
                return this.ProceduresField;
            }
            set {
                if ((object.ReferenceEquals(this.ProceduresField, value) != true)) {
                    this.ProceduresField = value;
                    this.RaisePropertyChanged("Procedures");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationMessage", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ValidationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMessage {
            get {
                return this.UserMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMessageField, value) != true)) {
                    this.UserMessageField = value;
                    this.RaisePropertyChanged("UserMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStatus", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    public enum OrderStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retrying = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Successful = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Received = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderQuery", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class OrderQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> CollectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTimeOffset> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientDobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAccountNumber {
            get {
                return this.ClientAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAccountNumberField, value) != true)) {
                    this.ClientAccountNumberField = value;
                    this.RaisePropertyChanged("ClientAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTimeOffset> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientDob {
            get {
                return this.PatientDobField;
            }
            set {
                if ((this.PatientDobField.Equals(value) != true)) {
                    this.PatientDobField = value;
                    this.RaisePropertyChanged("PatientDob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerOrderNumber {
            get {
                return this.PlacerOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerOrderNumberField, value) != true)) {
                    this.PlacerOrderNumberField = value;
                    this.RaisePropertyChanged("PlacerOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum ServiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Laboratory = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radiology = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillType", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum BillType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Insurance = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Patient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Client = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NavigationPage", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum NavigationPage : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultInbox = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultByPatient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHistory = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OrderHistoryByPatient = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CheckProcedureOrderable", ReplyAction="http://tempuri.org/IOrderService/CheckProcedureOrderableResponse")]
        Intervent.HWS.OrderService.ProcedureOrderableResponse CheckProcedureOrderable(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CheckProcedureOrderable", ReplyAction="http://tempuri.org/IOrderService/CheckProcedureOrderableResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.ProcedureOrderableResponse> CheckProcedureOrderableAsync(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderDetailByOrderNumber", ReplyAction="http://tempuri.org/IOrderService/GetOrderDetailByOrderNumberResponse")]
        Intervent.HWS.OrderService.OrderResponse GetOrderDetailByOrderNumber(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderDetailByOrderNumber", ReplyAction="http://tempuri.org/IOrderService/GetOrderDetailByOrderNumberResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderResponse> GetOrderDetailByOrderNumberAsync(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersByDateRange", ReplyAction="http://tempuri.org/IOrderService/GetOrdersByDateRangeResponse")]
        Intervent.HWS.OrderService.OrderQueryResponse GetOrdersByDateRange(string sessionId, int recordPerPage, System.DateTimeOffset dateRangeFrom, System.DateTimeOffset dateRangeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrdersByDateRange", ReplyAction="http://tempuri.org/IOrderService/GetOrdersByDateRangeResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderQueryResponse> GetOrdersByDateRangeAsync(string sessionId, int recordPerPage, System.DateTimeOffset dateRangeFrom, System.DateTimeOffset dateRangeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetLatestOrders", ReplyAction="http://tempuri.org/IOrderService/GetLatestOrdersResponse")]
        Intervent.HWS.OrderService.OrderQueryResponse GetLatestOrders(string sessionId, int recordPerPage, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetLatestOrders", ReplyAction="http://tempuri.org/IOrderService/GetLatestOrdersResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderQueryResponse> GetLatestOrdersAsync(string sessionId, int recordPerPage, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderStatus", ReplyAction="http://tempuri.org/IOrderService/GetOrderStatusResponse")]
        Intervent.HWS.OrderService.OrderStatusResponse GetOrderStatus(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderStatus", ReplyAction="http://tempuri.org/IOrderService/GetOrderStatusResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderStatusResponse> GetOrderStatusAsync(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetHL7Order", ReplyAction="http://tempuri.org/IOrderService/GetHL7OrderResponse")]
        Intervent.HWS.OrderService.HL7OrderResponse GetHL7Order(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetHL7Order", ReplyAction="http://tempuri.org/IOrderService/GetHL7OrderResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.HL7OrderResponse> GetHL7OrderAsync(string sessionId, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/PrepareOrder", ReplyAction="http://tempuri.org/IOrderService/PrepareOrderResponse")]
        Intervent.HWS.OrderService.UriResponse PrepareOrder(
                    string sessionId, 
                    string linkText, 
                    string linkUrl, 
                    string userIPv4, 
                    Intervent.HWS.OrderService.ServiceType serviceType, 
                    string emrCode, 
                    Intervent.HWS.OrderService.UserContext user, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Practice practice, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.BillType billType, 
                    string referenceNumber, 
                    string labCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/PrepareOrder", ReplyAction="http://tempuri.org/IOrderService/PrepareOrderResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.UriResponse> PrepareOrderAsync(
                    string sessionId, 
                    string linkText, 
                    string linkUrl, 
                    string userIPv4, 
                    Intervent.HWS.OrderService.ServiceType serviceType, 
                    string emrCode, 
                    Intervent.HWS.OrderService.UserContext user, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Practice practice, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.BillType billType, 
                    string referenceNumber, 
                    string labCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/NavigatePage", ReplyAction="http://tempuri.org/IOrderService/NavigatePageResponse")]
        Intervent.HWS.OrderService.UriResponse NavigatePage(string sessionId, string linkText, string linkUrl, string userIPv4, Intervent.HWS.OrderService.ServiceType serviceType, string emrCode, Intervent.HWS.OrderService.NavigationPage pageId, Intervent.HWS.OrderService.UserContext user, Intervent.HWS.OrderService.Practice practice, string patientCode, string clinicianNpi, string referenceNumber, string labCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/NavigatePage", ReplyAction="http://tempuri.org/IOrderService/NavigatePageResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.UriResponse> NavigatePageAsync(string sessionId, string linkText, string linkUrl, string userIPv4, Intervent.HWS.OrderService.ServiceType serviceType, string emrCode, Intervent.HWS.OrderService.NavigationPage pageId, Intervent.HWS.OrderService.UserContext user, Intervent.HWS.OrderService.Practice practice, string patientCode, string clinicianNpi, string referenceNumber, string labCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EchoPatient", ReplyAction="http://tempuri.org/IOrderService/EchoPatientResponse")]
        Intervent.HWS.OrderService.EchoResponse EchoPatient(string sessionId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/EchoPatient", ReplyAction="http://tempuri.org/IOrderService/EchoPatientResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.EchoResponse> EchoPatientAsync(string sessionId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProcedureDetail", ReplyAction="http://tempuri.org/IOrderService/GetProcedureDetailResponse")]
        Intervent.HWS.OrderService.ProcedureResponse GetProcedureDetail(string sessionId, string labCode, string testCode, string customId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProcedureDetail", ReplyAction="http://tempuri.org/IOrderService/GetProcedureDetailResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.ProcedureResponse> GetProcedureDetailAsync(string sessionId, string labCode, string testCode, string customId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProcedureAoe", ReplyAction="http://tempuri.org/IOrderService/GetProcedureAoeResponse")]
        Intervent.HWS.OrderService.AoeResponse GetProcedureAoe(string sessionId, string labCode, string testCode, string customId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetProcedureAoe", ReplyAction="http://tempuri.org/IOrderService/GetProcedureAoeResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.AoeResponse> GetProcedureAoeAsync(string sessionId, string labCode, string testCode, string customId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CheckMedicalNecessity", ReplyAction="http://tempuri.org/IOrderService/CheckMedicalNecessityResponse")]
        Intervent.HWS.OrderService.MedicalNecessityResponse CheckMedicalNecessity(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance, Intervent.HWS.OrderService.Clinician orderingClinician, Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CheckMedicalNecessity", ReplyAction="http://tempuri.org/IOrderService/CheckMedicalNecessityResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.MedicalNecessityResponse> CheckMedicalNecessityAsync(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance, Intervent.HWS.OrderService.Clinician orderingClinician, Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionClient", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionClientResponse")]
        Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionClient(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionClient", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionClientResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionClientAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionPatient", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionPatientResponse")]
        Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionPatient(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionPatient", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionPatientResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionPatientAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionInsurance", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionInsuranceResponse")]
        Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionInsurance(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionInsurance", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionInsuranceResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionInsuranceAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionWorkerComp", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionWorkerCompResponse")]
        Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionWorkerComp(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    string claimCode, 
                    System.DateTimeOffset claimDate, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionWorkerComp", ReplyAction="http://tempuri.org/IOrderService/SubmitOrderWithBillOptionWorkerCompResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionWorkerCompAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    string claimCode, 
                    System.DateTimeOffset claimDate, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber", ReplyAction="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumberResponse")]
        Intervent.HWS.OrderService.FileResponse GetOrderFileByHtiOrderNumber(string sessionId, string clientAccountNumber, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber", ReplyAction="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumberResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.FileResponse> GetOrderFileByHtiOrderNumberAsync(string sessionId, string clientAccountNumber, string htiOrderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber2", ReplyAction="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber2Response")]
        Intervent.HWS.OrderService.FileResponse GetOrderFileByHtiOrderNumber2(string sessionId, string practiceCode, string htiOrderNumber, string labCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber2", ReplyAction="http://tempuri.org/IOrderService/GetOrderFileByHtiOrderNumber2Response")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.FileResponse> GetOrderFileByHtiOrderNumber2Async(string sessionId, string practiceCode, string htiOrderNumber, string labCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : Intervent.HWS.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<Intervent.HWS.OrderService.IOrderService>, Intervent.HWS.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intervent.HWS.OrderService.ProcedureOrderableResponse CheckProcedureOrderable(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.CheckProcedureOrderable(sessionId, labCode, customId, procedureList);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.ProcedureOrderableResponse> CheckProcedureOrderableAsync(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.CheckProcedureOrderableAsync(sessionId, labCode, customId, procedureList);
        }
        
        public Intervent.HWS.OrderService.OrderResponse GetOrderDetailByOrderNumber(string sessionId, string htiOrderNumber) {
            return base.Channel.GetOrderDetailByOrderNumber(sessionId, htiOrderNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderResponse> GetOrderDetailByOrderNumberAsync(string sessionId, string htiOrderNumber) {
            return base.Channel.GetOrderDetailByOrderNumberAsync(sessionId, htiOrderNumber);
        }
        
        public Intervent.HWS.OrderService.OrderQueryResponse GetOrdersByDateRange(string sessionId, int recordPerPage, System.DateTimeOffset dateRangeFrom, System.DateTimeOffset dateRangeTo) {
            return base.Channel.GetOrdersByDateRange(sessionId, recordPerPage, dateRangeFrom, dateRangeTo);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderQueryResponse> GetOrdersByDateRangeAsync(string sessionId, int recordPerPage, System.DateTimeOffset dateRangeFrom, System.DateTimeOffset dateRangeTo) {
            return base.Channel.GetOrdersByDateRangeAsync(sessionId, recordPerPage, dateRangeFrom, dateRangeTo);
        }
        
        public Intervent.HWS.OrderService.OrderQueryResponse GetLatestOrders(string sessionId, int recordPerPage, string status) {
            return base.Channel.GetLatestOrders(sessionId, recordPerPage, status);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderQueryResponse> GetLatestOrdersAsync(string sessionId, int recordPerPage, string status) {
            return base.Channel.GetLatestOrdersAsync(sessionId, recordPerPage, status);
        }
        
        public Intervent.HWS.OrderService.OrderStatusResponse GetOrderStatus(string sessionId, string htiOrderNumber) {
            return base.Channel.GetOrderStatus(sessionId, htiOrderNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.OrderStatusResponse> GetOrderStatusAsync(string sessionId, string htiOrderNumber) {
            return base.Channel.GetOrderStatusAsync(sessionId, htiOrderNumber);
        }
        
        public Intervent.HWS.OrderService.HL7OrderResponse GetHL7Order(string sessionId, string htiOrderNumber) {
            return base.Channel.GetHL7Order(sessionId, htiOrderNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.HL7OrderResponse> GetHL7OrderAsync(string sessionId, string htiOrderNumber) {
            return base.Channel.GetHL7OrderAsync(sessionId, htiOrderNumber);
        }
        
        public Intervent.HWS.OrderService.UriResponse PrepareOrder(
                    string sessionId, 
                    string linkText, 
                    string linkUrl, 
                    string userIPv4, 
                    Intervent.HWS.OrderService.ServiceType serviceType, 
                    string emrCode, 
                    Intervent.HWS.OrderService.UserContext user, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Practice practice, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.BillType billType, 
                    string referenceNumber, 
                    string labCode) {
            return base.Channel.PrepareOrder(sessionId, linkText, linkUrl, userIPv4, serviceType, emrCode, user, patient, practice, orderingClinician, guarantor, primaryInsurance, secondaryInsurance, icd9DiagnosisList, billType, referenceNumber, labCode);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.UriResponse> PrepareOrderAsync(
                    string sessionId, 
                    string linkText, 
                    string linkUrl, 
                    string userIPv4, 
                    Intervent.HWS.OrderService.ServiceType serviceType, 
                    string emrCode, 
                    Intervent.HWS.OrderService.UserContext user, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Practice practice, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.BillType billType, 
                    string referenceNumber, 
                    string labCode) {
            return base.Channel.PrepareOrderAsync(sessionId, linkText, linkUrl, userIPv4, serviceType, emrCode, user, patient, practice, orderingClinician, guarantor, primaryInsurance, secondaryInsurance, icd9DiagnosisList, billType, referenceNumber, labCode);
        }
        
        public Intervent.HWS.OrderService.UriResponse NavigatePage(string sessionId, string linkText, string linkUrl, string userIPv4, Intervent.HWS.OrderService.ServiceType serviceType, string emrCode, Intervent.HWS.OrderService.NavigationPage pageId, Intervent.HWS.OrderService.UserContext user, Intervent.HWS.OrderService.Practice practice, string patientCode, string clinicianNpi, string referenceNumber, string labCode) {
            return base.Channel.NavigatePage(sessionId, linkText, linkUrl, userIPv4, serviceType, emrCode, pageId, user, practice, patientCode, clinicianNpi, referenceNumber, labCode);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.UriResponse> NavigatePageAsync(string sessionId, string linkText, string linkUrl, string userIPv4, Intervent.HWS.OrderService.ServiceType serviceType, string emrCode, Intervent.HWS.OrderService.NavigationPage pageId, Intervent.HWS.OrderService.UserContext user, Intervent.HWS.OrderService.Practice practice, string patientCode, string clinicianNpi, string referenceNumber, string labCode) {
            return base.Channel.NavigatePageAsync(sessionId, linkText, linkUrl, userIPv4, serviceType, emrCode, pageId, user, practice, patientCode, clinicianNpi, referenceNumber, labCode);
        }
        
        public Intervent.HWS.OrderService.EchoResponse EchoPatient(string sessionId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance) {
            return base.Channel.EchoPatient(sessionId, patient, patientInsurance);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.EchoResponse> EchoPatientAsync(string sessionId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance) {
            return base.Channel.EchoPatientAsync(sessionId, patient, patientInsurance);
        }
        
        public Intervent.HWS.OrderService.ProcedureResponse GetProcedureDetail(string sessionId, string labCode, string testCode, string customId) {
            return base.Channel.GetProcedureDetail(sessionId, labCode, testCode, customId);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.ProcedureResponse> GetProcedureDetailAsync(string sessionId, string labCode, string testCode, string customId) {
            return base.Channel.GetProcedureDetailAsync(sessionId, labCode, testCode, customId);
        }
        
        public Intervent.HWS.OrderService.AoeResponse GetProcedureAoe(string sessionId, string labCode, string testCode, string customId) {
            return base.Channel.GetProcedureAoe(sessionId, labCode, testCode, customId);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.AoeResponse> GetProcedureAoeAsync(string sessionId, string labCode, string testCode, string customId) {
            return base.Channel.GetProcedureAoeAsync(sessionId, labCode, testCode, customId);
        }
        
        public Intervent.HWS.OrderService.MedicalNecessityResponse CheckMedicalNecessity(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance, Intervent.HWS.OrderService.Clinician orderingClinician, Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.CheckMedicalNecessity(sessionId, labCode, customId, patient, patientInsurance, orderingClinician, icd9DiagnosisList, procedureList);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.MedicalNecessityResponse> CheckMedicalNecessityAsync(string sessionId, string labCode, string customId, Intervent.HWS.OrderService.PatientBase patient, Intervent.HWS.OrderService.PatientInsurance patientInsurance, Intervent.HWS.OrderService.Clinician orderingClinician, Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.CheckMedicalNecessityAsync(sessionId, labCode, customId, patient, patientInsurance, orderingClinician, icd9DiagnosisList, procedureList);
        }
        
        public Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionClient(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionClient(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionClientAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionClientAsync(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionPatient(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionPatient(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionPatientAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionPatientAsync(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionInsurance(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionInsurance(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, primaryInsurance, secondaryInsurance, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionInsuranceAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList, 
                    bool enableAsynchronous) {
            return base.Channel.SubmitOrderWithBillOptionInsuranceAsync(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, primaryInsurance, secondaryInsurance, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList, enableAsynchronous);
        }
        
        public Intervent.HWS.OrderService.SubmitOrderResponse SubmitOrderWithBillOptionWorkerComp(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    string claimCode, 
                    System.DateTimeOffset claimDate, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.SubmitOrderWithBillOptionWorkerComp(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, claimCode, claimDate, primaryInsurance, secondaryInsurance, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.SubmitOrderResponse> SubmitOrderWithBillOptionWorkerCompAsync(
                    string sessionId, 
                    string labCode, 
                    string placerOrderNumber, 
                    string customId, 
                    string priority, 
                    bool pscHold, 
                    string comment, 
                    System.Nullable<System.DateTimeOffset> collectionDatetimeOffset, 
                    System.Nullable<System.DateTimeOffset> orderDatetimeOffset, 
                    Intervent.HWS.OrderService.PatientBase patient, 
                    string claimCode, 
                    System.DateTimeOffset claimDate, 
                    Intervent.HWS.OrderService.PatientInsurance primaryInsurance, 
                    Intervent.HWS.OrderService.PatientInsurance secondaryInsurance, 
                    Intervent.HWS.OrderService.Clinician orderingClinician, 
                    Intervent.HWS.OrderService.Clinician[] ccClinician, 
                    Intervent.HWS.OrderService.Guarantor guarantor, 
                    Intervent.HWS.OrderService.Diagnosis[] icd9DiagnosisList, 
                    Intervent.HWS.OrderService.RequestedProcedure[] procedureList) {
            return base.Channel.SubmitOrderWithBillOptionWorkerCompAsync(sessionId, labCode, placerOrderNumber, customId, priority, pscHold, comment, collectionDatetimeOffset, orderDatetimeOffset, patient, claimCode, claimDate, primaryInsurance, secondaryInsurance, orderingClinician, ccClinician, guarantor, icd9DiagnosisList, procedureList);
        }
        
        public Intervent.HWS.OrderService.FileResponse GetOrderFileByHtiOrderNumber(string sessionId, string clientAccountNumber, string htiOrderNumber) {
            return base.Channel.GetOrderFileByHtiOrderNumber(sessionId, clientAccountNumber, htiOrderNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.FileResponse> GetOrderFileByHtiOrderNumberAsync(string sessionId, string clientAccountNumber, string htiOrderNumber) {
            return base.Channel.GetOrderFileByHtiOrderNumberAsync(sessionId, clientAccountNumber, htiOrderNumber);
        }
        
        public Intervent.HWS.OrderService.FileResponse GetOrderFileByHtiOrderNumber2(string sessionId, string practiceCode, string htiOrderNumber, string labCode) {
            return base.Channel.GetOrderFileByHtiOrderNumber2(sessionId, practiceCode, htiOrderNumber, labCode);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.FileResponse> GetOrderFileByHtiOrderNumber2Async(string sessionId, string practiceCode, string htiOrderNumber, string labCode) {
            return base.Channel.GetOrderFileByHtiOrderNumber2Async(sessionId, practiceCode, htiOrderNumber, labCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IAbnService")]
    public interface IAbnService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbnService/CheckMedicalNecessityByCPT4", ReplyAction="http://tempuri.org/IAbnService/CheckMedicalNecessityByCPT4Response")]
        Intervent.HWS.OrderService.AbnResponseByCpt4 CheckMedicalNecessityByCPT4(string sessionId, string[] cpt4List, string[] icd9List, string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbnService/CheckMedicalNecessityByCPT4", ReplyAction="http://tempuri.org/IAbnService/CheckMedicalNecessityByCPT4Response")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.AbnResponseByCpt4> CheckMedicalNecessityByCPT4Async(string sessionId, string[] cpt4List, string[] icd9List, string zipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbnService/GetABNPdf", ReplyAction="http://tempuri.org/IAbnService/GetABNPdfResponse")]
        Intervent.HWS.OrderService.AbnResponsePdf GetABNPdf(string sessionId, Intervent.HWS.OrderService.ABNInputDTO abnData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAbnService/GetABNPdf", ReplyAction="http://tempuri.org/IAbnService/GetABNPdfResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.OrderService.AbnResponsePdf> GetABNPdfAsync(string sessionId, Intervent.HWS.OrderService.ABNInputDTO abnData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAbnServiceChannel : Intervent.HWS.OrderService.IAbnService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AbnServiceClient : System.ServiceModel.ClientBase<Intervent.HWS.OrderService.IAbnService>, Intervent.HWS.OrderService.IAbnService {
        
        public AbnServiceClient() {
        }
        
        public AbnServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AbnServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbnServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AbnServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intervent.HWS.OrderService.AbnResponseByCpt4 CheckMedicalNecessityByCPT4(string sessionId, string[] cpt4List, string[] icd9List, string zipCode) {
            return base.Channel.CheckMedicalNecessityByCPT4(sessionId, cpt4List, icd9List, zipCode);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.AbnResponseByCpt4> CheckMedicalNecessityByCPT4Async(string sessionId, string[] cpt4List, string[] icd9List, string zipCode) {
            return base.Channel.CheckMedicalNecessityByCPT4Async(sessionId, cpt4List, icd9List, zipCode);
        }
        
        public Intervent.HWS.OrderService.AbnResponsePdf GetABNPdf(string sessionId, Intervent.HWS.OrderService.ABNInputDTO abnData) {
            return base.Channel.GetABNPdf(sessionId, abnData);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.OrderService.AbnResponsePdf> GetABNPdfAsync(string sessionId, Intervent.HWS.OrderService.ABNInputDTO abnData) {
            return base.Channel.GetABNPdfAsync(sessionId, abnData);
        }
    }
}
