//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intervent.HWS.ReportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceType", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    public enum ServiceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Laboratory = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Radiology = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ValidationResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportAccessionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportQueryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.FileResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.HL7ReportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ResultCountResponse))]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionIdField, value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportAccessionResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportQueryResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.FileResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.HL7ReportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ResultCountResponse))]
    public partial class ValidationResponse : Intervent.HWS.ReportService.ServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.ValidationMessage[] ValidationErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.ValidationMessage[] ValidationError {
            get {
                return this.ValidationErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationErrorField, value) != true)) {
                    this.ValidationErrorField = value;
                    this.RaisePropertyChanged("ValidationError");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportAccessionResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class ReportAccessionResponse : Intervent.HWS.ReportService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.ReportAccession ReportAccessionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.ReportAccession ReportAccession {
            get {
                return this.ReportAccessionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportAccessionField, value) != true)) {
                    this.ReportAccessionField = value;
                    this.RaisePropertyChanged("ReportAccession");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportQueryResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class ReportQueryResponse : Intervent.HWS.ReportService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.ReportAccessionQuery[] SearchResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.ReportAccessionQuery[] SearchResult {
            get {
                return this.SearchResultField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchResultField, value) != true)) {
                    this.SearchResultField = value;
                    this.RaisePropertyChanged("SearchResult");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class FileResponse : Intervent.HWS.ReportService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.File FileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.File File {
            get {
                return this.FileField;
            }
            set {
                if ((object.ReferenceEquals(this.FileField, value) != true)) {
                    this.FileField = value;
                    this.RaisePropertyChanged("File");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HL7ReportResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class HL7ReportResponse : Intervent.HWS.ReportService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HL7Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HL7 {
            get {
                return this.HL7Field;
            }
            set {
                if ((object.ReferenceEquals(this.HL7Field, value) != true)) {
                    this.HL7Field = value;
                    this.RaisePropertyChanged("HL7");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCountResponse", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Service")]
    [System.SerializableAttribute()]
    public partial class ResultCountResponse : Intervent.HWS.ReportService.ValidationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ResultCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ResultCount {
            get {
                return this.ResultCountField;
            }
            set {
                if ((this.ResultCountField.Equals(value) != true)) {
                    this.ResultCountField = value;
                    this.RaisePropertyChanged("ResultCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationMessage", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ValidationMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorId {
            get {
                return this.ErrorIdField;
            }
            set {
                if ((this.ErrorIdField.Equals(value) != true)) {
                    this.ErrorIdField = value;
                    this.RaisePropertyChanged("ErrorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMessage {
            get {
                return this.UserMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMessageField, value) != true)) {
                    this.UserMessageField = value;
                    this.RaisePropertyChanged("UserMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportAccession", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ReportAccession : Intervent.HWS.ReportService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NTEsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.Clinician OrderingClinicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.PatientBase PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.Facility[] PerformingFacilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.Practice PracticeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.ReportProcedure[] ProceduresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderOrderNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NTEs {
            get {
                return this.NTEsField;
            }
            set {
                if ((object.ReferenceEquals(this.NTEsField, value) != true)) {
                    this.NTEsField = value;
                    this.RaisePropertyChanged("NTEs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.Clinician OrderingClinician {
            get {
                return this.OrderingClinicianField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderingClinicianField, value) != true)) {
                    this.OrderingClinicianField = value;
                    this.RaisePropertyChanged("OrderingClinician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.PatientBase Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.Facility[] PerformingFacilities {
            get {
                return this.PerformingFacilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformingFacilitiesField, value) != true)) {
                    this.PerformingFacilitiesField = value;
                    this.RaisePropertyChanged("PerformingFacilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerOrderNumber {
            get {
                return this.PlacerOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerOrderNumberField, value) != true)) {
                    this.PlacerOrderNumberField = value;
                    this.RaisePropertyChanged("PlacerOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.Practice Practice {
            get {
                return this.PracticeField;
            }
            set {
                if ((object.ReferenceEquals(this.PracticeField, value) != true)) {
                    this.PracticeField = value;
                    this.RaisePropertyChanged("Practice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.ReportProcedure[] Procedures {
            get {
                return this.ProceduresField;
            }
            set {
                if ((object.ReferenceEquals(this.ProceduresField, value) != true)) {
                    this.ProceduresField = value;
                    this.RaisePropertyChanged("Procedures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderOrderNumber {
            get {
                return this.SenderOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderOrderNumberField, value) != true)) {
                    this.SenderOrderNumberField = value;
                    this.RaisePropertyChanged("SenderOrderNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObject", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.Clinician))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.Address))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.PatientBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.Practice))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ResultBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportProcedure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.File))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportAccession))]
    public partial class BaseObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clinician", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Clinician : Intervent.HWS.ReportService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpinField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Npi {
            get {
                return this.NpiField;
            }
            set {
                if ((object.ReferenceEquals(this.NpiField, value) != true)) {
                    this.NpiField = value;
                    this.RaisePropertyChanged("Npi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Upin {
            get {
                return this.UpinField;
            }
            set {
                if ((object.ReferenceEquals(this.UpinField, value) != true)) {
                    this.UpinField = value;
                    this.RaisePropertyChanged("Upin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.PatientBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.Practice))]
    public partial class Address : Intervent.HWS.ReportService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine1 {
            get {
                return this.StreetLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine1Field, value) != true)) {
                    this.StreetLine1Field = value;
                    this.RaisePropertyChanged("StreetLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine2 {
            get {
                return this.StreetLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine2Field, value) != true)) {
                    this.StreetLine2Field = value;
                    this.RaisePropertyChanged("StreetLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientBase", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class PatientBase : Intervent.HWS.ReportService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EthnicityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaidenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MrnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamePrefixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameSuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerPatientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderPatientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SsnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bed {
            get {
                return this.BedField;
            }
            set {
                if ((object.ReferenceEquals(this.BedField, value) != true)) {
                    this.BedField = value;
                    this.RaisePropertyChanged("Bed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillingNumber {
            get {
                return this.BillingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BillingNumberField, value) != true)) {
                    this.BillingNumberField = value;
                    this.RaisePropertyChanged("BillingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Dob {
            get {
                return this.DobField;
            }
            set {
                if ((this.DobField.Equals(value) != true)) {
                    this.DobField = value;
                    this.RaisePropertyChanged("Dob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ethnicity {
            get {
                return this.EthnicityField;
            }
            set {
                if ((object.ReferenceEquals(this.EthnicityField, value) != true)) {
                    this.EthnicityField = value;
                    this.RaisePropertyChanged("Ethnicity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaidenName {
            get {
                return this.MaidenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaidenNameField, value) != true)) {
                    this.MaidenNameField = value;
                    this.RaisePropertyChanged("MaidenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mrn {
            get {
                return this.MrnField;
            }
            set {
                if ((object.ReferenceEquals(this.MrnField, value) != true)) {
                    this.MrnField = value;
                    this.RaisePropertyChanged("Mrn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamePrefix {
            get {
                return this.NamePrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.NamePrefixField, value) != true)) {
                    this.NamePrefixField = value;
                    this.RaisePropertyChanged("NamePrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameSuffix {
            get {
                return this.NameSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.NameSuffixField, value) != true)) {
                    this.NameSuffixField = value;
                    this.RaisePropertyChanged("NameSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerPatientCode {
            get {
                return this.PlacerPatientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerPatientCodeField, value) != true)) {
                    this.PlacerPatientCodeField = value;
                    this.RaisePropertyChanged("PlacerPatientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryLanguage {
            get {
                return this.PrimaryLanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryLanguageField, value) != true)) {
                    this.PrimaryLanguageField = value;
                    this.RaisePropertyChanged("PrimaryLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SenderPatientCode {
            get {
                return this.SenderPatientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderPatientCodeField, value) != true)) {
                    this.SenderPatientCodeField = value;
                    this.RaisePropertyChanged("SenderPatientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ssn {
            get {
                return this.SsnField;
            }
            set {
                if ((object.ReferenceEquals(this.SsnField, value) != true)) {
                    this.SsnField = value;
                    this.RaisePropertyChanged("Ssn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Practice", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Practice : Intervent.HWS.ReportService.Address {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TimeZoneOffsetField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeZoneOffset {
            get {
                return this.TimeZoneOffsetField;
            }
            set {
                if ((this.TimeZoneOffsetField.Equals(value) != true)) {
                    this.TimeZoneOffsetField = value;
                    this.RaisePropertyChanged("TimeZoneOffset");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultBase", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportProcedure))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Intervent.HWS.ReportService.ReportResult))]
    public partial class ResultBase : Intervent.HWS.ReportService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoincField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NTEsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerformingFacilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TestDescriptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loinc {
            get {
                return this.LoincField;
            }
            set {
                if ((object.ReferenceEquals(this.LoincField, value) != true)) {
                    this.LoincField = value;
                    this.RaisePropertyChanged("Loinc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NTEs {
            get {
                return this.NTEsField;
            }
            set {
                if ((object.ReferenceEquals(this.NTEsField, value) != true)) {
                    this.NTEsField = value;
                    this.RaisePropertyChanged("NTEs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerformingFacilityId {
            get {
                return this.PerformingFacilityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformingFacilityIdField, value) != true)) {
                    this.PerformingFacilityIdField = value;
                    this.RaisePropertyChanged("PerformingFacilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestCode {
            get {
                return this.TestCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TestCodeField, value) != true)) {
                    this.TestCodeField = value;
                    this.RaisePropertyChanged("TestCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TestDescription {
            get {
                return this.TestDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.TestDescriptionField, value) != true)) {
                    this.TestDescriptionField = value;
                    this.RaisePropertyChanged("TestDescription");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportProcedure", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ReportProcedure : Intervent.HWS.ReportService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CcClinicianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CollectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceivedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Intervent.HWS.ReportService.ReportResult[] ReportResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResultDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CcClinician {
            get {
                return this.CcClinicianField;
            }
            set {
                if ((object.ReferenceEquals(this.CcClinicianField, value) != true)) {
                    this.CcClinicianField = value;
                    this.RaisePropertyChanged("CcClinician");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceivedDate {
            get {
                return this.ReceivedDateField;
            }
            set {
                if ((this.ReceivedDateField.Equals(value) != true)) {
                    this.ReceivedDateField = value;
                    this.RaisePropertyChanged("ReceivedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Intervent.HWS.ReportService.ReportResult[] ReportResults {
            get {
                return this.ReportResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportResultsField, value) != true)) {
                    this.ReportResultsField = value;
                    this.RaisePropertyChanged("ReportResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResultDate {
            get {
                return this.ResultDateField;
            }
            set {
                if ((this.ResultDateField.Equals(value) != true)) {
                    this.ResultDateField = value;
                    this.RaisePropertyChanged("ResultDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportResult", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ReportResult : Intervent.HWS.ReportService.ResultBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbnormalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abnormal {
            get {
                return this.AbnormalField;
            }
            set {
                if ((object.ReferenceEquals(this.AbnormalField, value) != true)) {
                    this.AbnormalField = value;
                    this.RaisePropertyChanged("Abnormal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Range {
            get {
                return this.RangeField;
            }
            set {
                if ((object.ReferenceEquals(this.RangeField, value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultValue {
            get {
                return this.ResultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultValueField, value) != true)) {
                    this.ResultValueField = value;
                    this.RaisePropertyChanged("ResultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="File", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class File : Intervent.HWS.ReportService.BaseObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] BytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Bytes {
            get {
                return this.BytesField;
            }
            set {
                if ((object.ReferenceEquals(this.BytesField, value) != true)) {
                    this.BytesField = value;
                    this.RaisePropertyChanged("Bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Facility", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class Facility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CliaNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NpiNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PerformingFacilityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CliaNumber {
            get {
                return this.CliaNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CliaNumberField, value) != true)) {
                    this.CliaNumberField = value;
                    this.RaisePropertyChanged("CliaNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorName {
            get {
                return this.DirectorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorNameField, value) != true)) {
                    this.DirectorNameField = value;
                    this.RaisePropertyChanged("DirectorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityName {
            get {
                return this.FacilityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityNameField, value) != true)) {
                    this.FacilityNameField = value;
                    this.RaisePropertyChanged("FacilityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NpiNumber {
            get {
                return this.NpiNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NpiNumberField, value) != true)) {
                    this.NpiNumberField = value;
                    this.RaisePropertyChanged("NpiNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PerformingFacilityId {
            get {
                return this.PerformingFacilityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PerformingFacilityIdField, value) != true)) {
                    this.PerformingFacilityIdField = value;
                    this.RaisePropertyChanged("PerformingFacilityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine1 {
            get {
                return this.StreetLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine1Field, value) != true)) {
                    this.StreetLine1Field = value;
                    this.RaisePropertyChanged("StreetLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetLine2 {
            get {
                return this.StreetLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.StreetLine2Field, value) != true)) {
                    this.StreetLine2Field = value;
                    this.RaisePropertyChanged("StreetLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportAccessionQuery", Namespace="http://schemas.datacontract.org/2004/07/Halfpenny.Portal.Model")]
    [System.SerializableAttribute()]
    public partial class ReportAccessionQuery : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientDobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientFirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlacerOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReportAccessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ResultDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientAccountNumber {
            get {
                return this.ClientAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientAccountNumberField, value) != true)) {
                    this.ClientAccountNumberField = value;
                    this.RaisePropertyChanged("ClientAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PatientDob {
            get {
                return this.PatientDobField;
            }
            set {
                if ((this.PatientDobField.Equals(value) != true)) {
                    this.PatientDobField = value;
                    this.RaisePropertyChanged("PatientDob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientFirstName {
            get {
                return this.PatientFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientFirstNameField, value) != true)) {
                    this.PatientFirstNameField = value;
                    this.RaisePropertyChanged("PatientFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientLastName {
            get {
                return this.PatientLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientLastNameField, value) != true)) {
                    this.PatientLastNameField = value;
                    this.RaisePropertyChanged("PatientLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlacerOrderNumber {
            get {
                return this.PlacerOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PlacerOrderNumberField, value) != true)) {
                    this.PlacerOrderNumberField = value;
                    this.RaisePropertyChanged("PlacerOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportAccessionId {
            get {
                return this.ReportAccessionIdField;
            }
            set {
                if ((this.ReportAccessionIdField.Equals(value) != true)) {
                    this.ReportAccessionIdField = value;
                    this.RaisePropertyChanged("ReportAccessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ResultDate {
            get {
                return this.ResultDateField;
            }
            set {
                if ((this.ResultDateField.Equals(value) != true)) {
                    this.ResultDateField = value;
                    this.RaisePropertyChanged("ResultDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReportService.IReportService")]
    public interface IReportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByClinicianNpi", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByClinicianNpiResponse")]
        Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByClinicianNpi(string sessionId, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByClinicianNpi", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByClinicianNpiResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByClinicianNpiAsync(string sessionId, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByPractice", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeResponse")]
        Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByPractice(string sessionId, string practiceCode, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByPractice", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByPracticeAsync(string sessionId, string practiceCode, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeAndClinicianNpi" +
            "", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeAndClinicianNpi" +
            "Response")]
        Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByPracticeAndClinicianNpi(string sessionId, string practiceCode, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeAndClinicianNpi" +
            "", ReplyAction="http://tempuri.org/IReportService/GetUnopenedResultCountByPracticeAndClinicianNpi" +
            "Response")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByPracticeAndClinicianNpiAsync(string sessionId, string practiceCode, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportDetailByReportAccessionId", ReplyAction="http://tempuri.org/IReportService/GetReportDetailByReportAccessionIdResponse")]
        Intervent.HWS.ReportService.ReportAccessionResponse GetReportDetailByReportAccessionId(string sessionId, string clientAccountNumber, int reportAccessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportDetailByReportAccessionId", ReplyAction="http://tempuri.org/IReportService/GetReportDetailByReportAccessionIdResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportAccessionResponse> GetReportDetailByReportAccessionIdAsync(string sessionId, string clientAccountNumber, int reportAccessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByPharmacyPatient", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByPharmacyPatientResponse")]
        Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByPharmacyPatient(string sessionId, string patientLastName, string patientFirstName, System.DateTime patientDob, string orderingClinicianNpi, System.DateTime dateOfService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByPharmacyPatient", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByPharmacyPatientResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByPharmacyPatientAsync(string sessionId, string patientLastName, string patientFirstName, System.DateTime patientDob, string orderingClinicianNpi, System.DateTime dateOfService);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestReportAccessions", ReplyAction="http://tempuri.org/IReportService/GetLatestReportAccessionsResponse")]
        Intervent.HWS.ReportService.ReportQueryResponse GetLatestReportAccessions(string sessionId, string clientAccountNumber, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestReportAccessions", ReplyAction="http://tempuri.org/IReportService/GetLatestReportAccessionsResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetLatestReportAccessionsAsync(string sessionId, string clientAccountNumber, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestReportAccessions2", ReplyAction="http://tempuri.org/IReportService/GetLatestReportAccessions2Response")]
        Intervent.HWS.ReportService.ReportQueryResponse GetLatestReportAccessions2(string sessionId, int recordPerPage, string reportAccessionStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetLatestReportAccessions2", ReplyAction="http://tempuri.org/IReportService/GetLatestReportAccessions2Response")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetLatestReportAccessions2Async(string sessionId, int recordPerPage, string reportAccessionStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByDateRangeResponse")]
        Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByDateRange(string sessionId, string clientAccountNumber, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByDateRange", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByDateRangeResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByDateRangeAsync(string sessionId, string clientAccountNumber, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByDateRange2", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByDateRange2Response")]
        Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByDateRange2(string sessionId, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage, string reportAccessionStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportAccessionsByDateRange2", ReplyAction="http://tempuri.org/IReportService/GetReportAccessionsByDateRange2Response")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByDateRange2Async(string sessionId, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage, string reportAccessionStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportFileByReportAccessionId", ReplyAction="http://tempuri.org/IReportService/GetReportFileByReportAccessionIdResponse")]
        Intervent.HWS.ReportService.FileResponse GetReportFileByReportAccessionId(string sessionId, string clientAccountNumber, int reportAccessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetReportFileByReportAccessionId", ReplyAction="http://tempuri.org/IReportService/GetReportFileByReportAccessionIdResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.FileResponse> GetReportFileByReportAccessionIdAsync(string sessionId, string clientAccountNumber, int reportAccessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetHL7Report", ReplyAction="http://tempuri.org/IReportService/GetHL7ReportResponse")]
        Intervent.HWS.ReportService.HL7ReportResponse GetHL7Report(string sessionId, int reportAccessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReportService/GetHL7Report", ReplyAction="http://tempuri.org/IReportService/GetHL7ReportResponse")]
        System.Threading.Tasks.Task<Intervent.HWS.ReportService.HL7ReportResponse> GetHL7ReportAsync(string sessionId, int reportAccessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReportServiceChannel : Intervent.HWS.ReportService.IReportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReportServiceClient : System.ServiceModel.ClientBase<Intervent.HWS.ReportService.IReportService>, Intervent.HWS.ReportService.IReportService {
        
        public ReportServiceClient() {
        }
        
        public ReportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByClinicianNpi(string sessionId, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByClinicianNpi(sessionId, npi, serviceType, patientCode, referenceNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByClinicianNpiAsync(string sessionId, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByClinicianNpiAsync(sessionId, npi, serviceType, patientCode, referenceNumber);
        }
        
        public Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByPractice(string sessionId, string practiceCode, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByPractice(sessionId, practiceCode, serviceType, patientCode, referenceNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByPracticeAsync(string sessionId, string practiceCode, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByPracticeAsync(sessionId, practiceCode, serviceType, patientCode, referenceNumber);
        }
        
        public Intervent.HWS.ReportService.ResultCountResponse GetUnopenedResultCountByPracticeAndClinicianNpi(string sessionId, string practiceCode, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByPracticeAndClinicianNpi(sessionId, practiceCode, npi, serviceType, patientCode, referenceNumber);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ResultCountResponse> GetUnopenedResultCountByPracticeAndClinicianNpiAsync(string sessionId, string practiceCode, string[] npi, Intervent.HWS.ReportService.ServiceType serviceType, string patientCode, string referenceNumber) {
            return base.Channel.GetUnopenedResultCountByPracticeAndClinicianNpiAsync(sessionId, practiceCode, npi, serviceType, patientCode, referenceNumber);
        }
        
        public Intervent.HWS.ReportService.ReportAccessionResponse GetReportDetailByReportAccessionId(string sessionId, string clientAccountNumber, int reportAccessionId) {
            return base.Channel.GetReportDetailByReportAccessionId(sessionId, clientAccountNumber, reportAccessionId);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportAccessionResponse> GetReportDetailByReportAccessionIdAsync(string sessionId, string clientAccountNumber, int reportAccessionId) {
            return base.Channel.GetReportDetailByReportAccessionIdAsync(sessionId, clientAccountNumber, reportAccessionId);
        }
        
        public Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByPharmacyPatient(string sessionId, string patientLastName, string patientFirstName, System.DateTime patientDob, string orderingClinicianNpi, System.DateTime dateOfService) {
            return base.Channel.GetReportAccessionsByPharmacyPatient(sessionId, patientLastName, patientFirstName, patientDob, orderingClinicianNpi, dateOfService);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByPharmacyPatientAsync(string sessionId, string patientLastName, string patientFirstName, System.DateTime patientDob, string orderingClinicianNpi, System.DateTime dateOfService) {
            return base.Channel.GetReportAccessionsByPharmacyPatientAsync(sessionId, patientLastName, patientFirstName, patientDob, orderingClinicianNpi, dateOfService);
        }
        
        public Intervent.HWS.ReportService.ReportQueryResponse GetLatestReportAccessions(string sessionId, string clientAccountNumber, int recordPerPage) {
            return base.Channel.GetLatestReportAccessions(sessionId, clientAccountNumber, recordPerPage);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetLatestReportAccessionsAsync(string sessionId, string clientAccountNumber, int recordPerPage) {
            return base.Channel.GetLatestReportAccessionsAsync(sessionId, clientAccountNumber, recordPerPage);
        }
        
        public Intervent.HWS.ReportService.ReportQueryResponse GetLatestReportAccessions2(string sessionId, int recordPerPage, string reportAccessionStatus) {
            return base.Channel.GetLatestReportAccessions2(sessionId, recordPerPage, reportAccessionStatus);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetLatestReportAccessions2Async(string sessionId, int recordPerPage, string reportAccessionStatus) {
            return base.Channel.GetLatestReportAccessions2Async(sessionId, recordPerPage, reportAccessionStatus);
        }
        
        public Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByDateRange(string sessionId, string clientAccountNumber, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage) {
            return base.Channel.GetReportAccessionsByDateRange(sessionId, clientAccountNumber, resultDateFrom, resultDateTo, recordPerPage);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByDateRangeAsync(string sessionId, string clientAccountNumber, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage) {
            return base.Channel.GetReportAccessionsByDateRangeAsync(sessionId, clientAccountNumber, resultDateFrom, resultDateTo, recordPerPage);
        }
        
        public Intervent.HWS.ReportService.ReportQueryResponse GetReportAccessionsByDateRange2(string sessionId, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage, string reportAccessionStatus) {
            return base.Channel.GetReportAccessionsByDateRange2(sessionId, resultDateFrom, resultDateTo, recordPerPage, reportAccessionStatus);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.ReportQueryResponse> GetReportAccessionsByDateRange2Async(string sessionId, System.DateTime resultDateFrom, System.DateTime resultDateTo, int recordPerPage, string reportAccessionStatus) {
            return base.Channel.GetReportAccessionsByDateRange2Async(sessionId, resultDateFrom, resultDateTo, recordPerPage, reportAccessionStatus);
        }
        
        public Intervent.HWS.ReportService.FileResponse GetReportFileByReportAccessionId(string sessionId, string clientAccountNumber, int reportAccessionId) {
            return base.Channel.GetReportFileByReportAccessionId(sessionId, clientAccountNumber, reportAccessionId);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.FileResponse> GetReportFileByReportAccessionIdAsync(string sessionId, string clientAccountNumber, int reportAccessionId) {
            return base.Channel.GetReportFileByReportAccessionIdAsync(sessionId, clientAccountNumber, reportAccessionId);
        }
        
        public Intervent.HWS.ReportService.HL7ReportResponse GetHL7Report(string sessionId, int reportAccessionId) {
            return base.Channel.GetHL7Report(sessionId, reportAccessionId);
        }
        
        public System.Threading.Tasks.Task<Intervent.HWS.ReportService.HL7ReportResponse> GetHL7ReportAsync(string sessionId, int reportAccessionId) {
            return base.Channel.GetHL7ReportAsync(sessionId, reportAccessionId);
        }
    }
}
