@using InterventWebApp
@model InterventWebApp.MessageDashboardModel

@{
	ViewBag.Title = "Message Dashboard";
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
	ViewBag.Details = "Message";
}

<section class="main main-bg">
    <div class="grid-container msg-dashboard-section">
        <div class="grid-x grid-margin-x  dashboard-container">
            <div class="cell large-3 medium-4 dashboard-left-container">
                <div class="create-new-msg text-center">
                    <button class="plus-btn button" data-open="new-msg-modal" onclick="addNewMsg();">Create New</button>
                </div>

                <div class="msg-main-menu">
                    <span class="show-for-small-only">Message Board <i class="fa fa-chevron-down"></i></span>
                    <ul class="tabs" data-tabs id="main-msg-tabs">
                        <li class="tabs-title is-active" onclick="sidebar(false, false, 1);" id="msg-board"><a href="#panel1">Message Board <span class="msg-count" id="msg-board-count"></span></a></li>
                        <li class="tabs-title" id="my-msg" onclick="sidebar(true, false, 2);"><a href="#panel2">My Messages <span class="msg-count" id="my-msg-count"></span></a></li>
                        <li class="tabs-title" id="msg-draft" onclick="sidebar(false, true, 3);"><a href="#panel3">Drafts</a></li>
                        <!--<li class="tabs-title" onclick="sidebar(4, false, false, 'panel4');" id="msg-archives"><a href="#panel4">Archives</a></li>-->
                    </ul>
                </div>

                <div class="fav-contact-list hide-for-small-only">
                    <h5>
                        Favorite Contacts <i class="fa fa-ellipsis-v" data-toggle="fav-contacts"></i>
                    </h5>
                    <div class="dropdown-pane" id="fav-contacts" data-dropdown data-auto-focus="true" data-close-on-click="true" data-position="bottom" data-alignment="right">
                        <ul>
                            <li data-toggle="manage-contact-modal">Manage Contacts</li>
                        </ul>
                    </div>
                    <div id="fav-contact-list" class="fav-contact-list-container">
                    </div>
                </div>
            </div>
            <!--Dashboard Left bar ends-->

            <div class="cell large-9 medium-8 dashboard-middle-container">
                <section class="msg-board-container">
                    <div class="msg-board-top">
                        <h5 class="panel1">Message Board</h5>
                        <h5 class="panel2 hide">My Message</h5>
                        <h5 class="panel3 hide">Draft</h5>
                        <!--<h5 class="panel4 hide">Archive</h5>-->

                        <div class="msg-search-container">
                            <div class="msg-search-form">
                                <input type="text" placeholder="Search" id="searchText" />
                                <button id="messageSearch"></button>
                            </div>
                        </div>
                    </div>

                    <div class="tabs-content" data-tabs-content="main-msg-tabs">
                        <div id="loader-wrapper"><div id="loader"></div></div>
                        <div class="tabs-panel is-active msg-board" id="panel1">
                            <div class="msg-tabs-list">
                                <span class="show-for-small-only">All <i class="fa fa-chevron-down"></i></span>
                                <ul>
                                    <li onclick="messagesType(null);" class="active-item" id="type0">All</li>
                                    <li onclick="messagesType(1);" id="type1">Unread</li>
                                </ul>
                            </div>

                            <div class="msg-list-container">
                                <div class="msg-list-inner" id="message-board"></div>
                            </div>
                        </div>
                        <!-- Message Board panel ends -->

                        <div class="tabs-panel my-msg-container" id="panel2">
                            <div class="msg-list-container">
                                <div class="msg-list-inner" id="my-message"></div>
                            </div>
                        </div>
                        <!-- My Messages panel ends -->

                        <div class="tabs-panel msg-board" id="panel3">
                            <div class="msg-list-container">
                                <div class="msg-list-inner" id="drafts"></div>
                            </div>
                        </div>
                        <!-- Drafts panel ends -->

                        <div class="tabs-panel archive-msg-container" id="panel4">
                            <div class="msg-tabs-list">
                                <ul>
                                    <li class="active-item">All</li>
                                    <li>Team Messages</li>
                                    <li>Patient Messages</li>
                                </ul>
                            </div>

                        </div>
                        <!-- Archives panel ends -->
                    </div>
                </section>
                <!-- pagination Start -->
                <div class="pagination-area hide" id="pagination-centered">
                    <ul>
                        <li id="numeric"></li>
                    </ul>
                    <!-- page-link Start -->
                    <div class="page-link">
                        <label>@Translate.Message("L4041")</label>
                        <div class="grid-x">
                            <input type="text" id="jumptoPageNo">
                            <button type="submit" id="gotoPage_submit" class="button">@Translate.Message("L4042")</button>
                        </div>
                    </div>
                    <!-- page-link End -->
                </div>
                <!-- pagination End -->
            </div>
            <!--Dashboard Right side ends-->

            <div class="cell large-6 medium-5 selected-chat-container hide" id="chat-message">
                <div class="message-chat">
                    <div class="chat-scroll-container">
                        <div class="chat-container" id="chat-container">
                        </div>
                    </div>
                        <div class="message-footer">
                            <div class="doc-remove-container hide">
                                <div>
                                    <p id="UploadedForm"></p>
                                </div>
                            </div>
                            <textarea id="msg-textbox" class="msg-textbox"></textarea>
                            <label><input type='file' name='files' id="updatePDF" class='upload' accept='.pdf' onchange="ValidateFileExtension(true);" /></label>
                            <button type="submit" class="submit-chat" onclick="sendResponse(false);"></button>
                        </div>
                </div>
            </div>
            <!--Selected chat container ends-->

            <div class="cell large-3 medium-3 attachments-container hide">
                <section class="attachments-section">
                    <div class="section-heading">
                        <h5>Attachments</h5>
                    </div>
                    <div class="reminders-list" id="reminders-list">
                    </div>
                    <div class="no-attachments hide">
                        <img src="~/Images/messages/no-attachment.svg" alt="No file attached" />
                    </div>
                </section>
            </div>
            <!--Attachements container ends-->
        </div>
    </div>
</section>

<div class="reveal msg-modal" id="new-msg-modal" data-reveal data-close-on-click="false" data-close-on-esc="false">
    <div class="msg-modal-heading">New Message</div>
    <div class="msg-modal-form">
        <form id="add-message" data-abide novalidate>
            <div class="cell medium-12">
                <label for="to">
                    <span class="f-label">To:</span>
                    <input type="text" name="to" class="user-picker typeahead tt-input" maxlength="100" value="" placeholder="Search for a participant by name" onchange="checkUpload();" id="UserText" required />
                    <small class="form-error">Required</small>
                </label>
            </div>
            <label for="subject">
                <span class="f-label">Subject:</span>
                <input type="text" name="subject" placeholder="" maxlength="100" id="subject" onchange="checkUpload();" required />
                <small class="form-error">Required</small>
            </label>
            <label>
                <textarea required id="messageBody" placeholder="Type a message or drop a file here…"></textarea>
                <small class="form-error">Required</small>
            </label>
            <div id="upload-option" class="hide">
                <div id="drop_zone" class="drop-area" ondrop="dropHandler(event, this);" ondragover="dragOverHandler(event, this);">
                    <div>
                        <label> Add Attachment <input type='file' name='files' id="pdfUpload" class='upload' accept='.pdf' onchange="ValidateFileExtension(false);" /></label> or drag and drop files here
                        <p>Please upload the file.</p>
                        <small class="form-error">Required</small>
                    </div>
                </div>
                <div class="doc-remove-container hide">
                    <div>
                        <img src="~/Images/upload-doc-tick.svg">
                        <p id="UploadedFormNewMsg"></p>
                    </div>
                </div>
            </div>
            <div class="button-group align-center">
                <button type="submit" id="submit" class="button" value="button1">Send</button>
                <button type="submit" id="draft" class="button hollow" value="button2">Save as Draft</button>
            </div>
            @Html.Hidden("RecipientId")
        </form>
    </div>
    <button class="close-button" data-close aria-label="Close modal" type="button">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="reveal msg-modal msg-detail-modal" id="msg-detail-modal" data-reveal data-close-on-click="false" data-close-on-esc="false">
    <div class="msg-modal-heading">Group Message Details</div>
    <div class="msg-modal-body">
        <div class="msg-detail-subject">
            <h6><span>Group Subject</span>Patient suffering from severe pain in joints</h6>
            <div class="msg-status msg-active">Active</div>
        </div>

        <div class="msg-admin-details">
            <div class="modal-body-subhead">Group started by</div>
            <div class="msg-contact-img"></div>
            <div class="msg-contact-detail">
                Jacky Smith
                <span>Patient</span>
            </div>
        </div>

        <div class="msg-group-members">
            <div class="modal-body-subhead">3 Members in this group </div>
            <form class="search-member-form">
                <input type="search" placeholder="Search" />
                <i class="fa fa-search"></i>
            </form>
            <div class="group-members-list" id="grp-mem-list">
                <ul>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Jacky Smith
                                <span>Patient</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Margaret Myers
                                <span>Coach</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Jenny Susan
                                <span>CSR</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Jacky Smith
                                <span>Patient</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Margaret Myers
                                <span>Coach</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                    <li>
                        <div>
                            <div class="msg-contact-img"></div>
                            <div class="msg-contact-detail">
                                Jenny Susan
                                <span>CSR</span>
                            </div>
                        </div>
                        <div>
                            <a href="#" class="remove-members">Remove</a>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="add-member-btn text-center"><button class="button hollow">Add New Member</button></div>
        </div>

        <button class="close-manage-contact close-button" data-close aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
</div>

<div class="reveal msg-modal msg-detail-modal" id="manage-contact-modal" data-reveal data-close-on-click="false" data-close-on-esc="false">
    <div class="msg-modal-heading">Manage Contacts</div>
    <div class="msg-modal-body">
        <div class="msg-group-members">
            <hidden id="ContactId"></hidden>
            <div class="msg-search-container">
                <div class="msg-search-form">
                    <input type="text" name="favoriteContact" class="contact-picker contacttypeahead tt-input" value="" placeholder="Search for a participant by name" id="contactSearchText" required />
                    <small class="form-error">Required</small>
                </div>
            </div>
            @*<form class="search-member-form">
                    <input type="search" placeholder="Search" />
                    <i class="fa fa-search"></i>
                </form>*@
            <div class="group-members-list" id="fav-mem-list">
            </div>
            <div class="add-member-btn text-center"><button class="button hollow">Add New Member</button></div>
        </div>

        <button class="close-button" data-close aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
</div>


<input type="hidden" id="messageId" value="0" />
<input type="hidden" id="parentMessageId" />
<input type="hidden" id="messageSubject" />
<input type="hidden" id="ImageUrl" value="@Model.emailUrl" />

<script src="@Url.Content("../Scripts/NewPager.js")?v=@CommonUtility.GetRandom()"></script>
<script src="@Url.Content("~/Scripts/typeahead.jquery.min.js")?v=@CommonUtility.GetRandom()"></script>
<script type="text/javascript">
    var startIndex = 1;
    var pageSize = 15;
    var totalRecords = 0;
    var currentPage = 0;
    var totalPages = 0;
    var ownMessage, drafts, category, isDraft;
    var unRead = false, type = 0, showUnread = false;
    var User = @Model.userId;

    var api, api_remind, api_msg_list, fav_mem_api;
    var url = $('#ImageUrl').val();
    var messageStatus = ["", "<span class='msg-status msg-pending'>New</span>", "<span class='msg-status msg-sent'>Sent</span>", "<span class='msg-status msg-read'>Seen</span>", "<span class='msg-status msg-follow'>Draft</span>"];

    $(document).ready(function () {
        isDraft = false
        startIndex = 0;
        pageSize = 10;
        totalRecords = 0;
        currentPage = 0;
        totalPages = 0;
		ListMessages(false, false, 1, false, false);
		backToListing();

        initChatScrollbar();

        getFavoriteContacts('fav-contact-list');

        $("[data-tabs]").on("change.zf.tabs", function () {
            var pos = $(".msg-main-menu li.is-active").index() + 1;
            $(".msg-board-top h5").addClass("hide");
            $(".msg-board-top h5:nth-child(" + pos + ")").removeClass("hide");
			if($(".dashboard-middle-container").hasClass("hide")) {
				$(".dashboard-middle-container, .attachments-container, .selected-chat-container").toggleClass("hide");
			}
        });
        $(".close-button").on("click", function (e) {
            $(".form-error").removeClass("is-visible");
            $("#UserText").removeClass("is-invalid-input");
            $("#subject").removeClass("is-invalid-input");
            $("#messageBody").removeClass("is-invalid-input");
        });
        $("#draft").on("click", function (e) {
            isDraft = true;
        });

        $(".draft-msg-container .msg-list-container li").on("click", function () {
            $('#new-msg-modal').foundation('open');
        });

        $("#chat-message").on("click", ".drop-menu-lv2 li a", function (e) {
            e.preventDefault();
            $(".drop-menu-lv2 li a").removeClass("active");
            $(this).addClass("active");
            var status = $(this).text();
            var classname = $(this).children("span").attr("class");
            $(".chat-heading-btm .msg-status").text(status).attr("class", classname);
            $('#ellipsis-dropdown').foundation('close');
		});

		$("#chat-message").on("click", ".drop-menu-lv1 li a", function (e) {
			e.preventDefault();
			$('#ellipsis-dropdown').foundation('close');
		});

		$("#chat-message").on("click", ".chat-opt-list li, .chat-opt-title img", function (e) {
			e.preventDefault();
			$(this).parents('.dropdown-pane').foundation('close');
        });

        var pane1 = $('#grp-mem-list');
        pane1.jScrollPane({
            showArrows: false,
            resizeSensor: true
        });
        var api1 = pane1.data().jsp;


		$("#msg-detail-modal").on("open.zf.reveal", function () {
			api1.reinitialise();
			$('#ellipsis-dropdown').foundation('close');
        });

        $("#msg-detail-modal").on("closed.zf.reveal", function () {
            api1.reinitialise();
        });

		$("#manage-contact-modal").on("open.zf.reveal", function () {
            getFavoriteContacts('fav-mem-list');
			$('#fav-contacts').foundation('close');
        });

        $("a.remove-members").on("click", function (e) {
            e.preventDefault();
            $(this).parents("li").remove();
            api1.reinitialise();
        });

        $(".msg-main-menu span.show-for-small-only, .msg-tabs-list span.show-for-small-only").on("click", function (e) {
            $(this).next("ul").slideToggle();
        });

        $(".msg-search-form button").on("click", function () {
            var wt = $(window).width();

            if (wt < 768) {

                $(this).toggleClass("close");
                $(this).siblings("input").toggleClass("show");
            }
        });

        $(".add-member-btn").on("click", function () {
            addOrRemoveFavoriteContacts($("#ContactId").val());
        });

        $(".close-manage-contact").on("click", function () {
            $("#ContactId").val('');
        });

        $("#main-msg-tabs").on("change.zf.tabs", function () {
            var newText = $(this).find("li.is-active a").contents().get(0).nodeValue;
            var oldText = $(this).siblings("span").contents().get(0).nodeValue;
            $(this).siblings("span").contents().filter(function () {
                return this.nodeType == 3
            }).each(function () {
                this.textContent = this.textContent.replace('' + oldText, '' + newText);
			});
			if($(window).width() <= 640)
				$(this).slideToggle();
	   });

	   $(window).resize(function () {
		   if ($(window).width() > 640)
			   $("#main-msg-tabs, .msg-tabs-list ul").show();
		   else
			   $("#main-msg-tabs, .msg-tabs-list ul").hide();
	   });

       // typehead
        var users = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace
            , remote: {
                url: '../Admin/ListUsers?name=%QUERY&hideOwnUser=true&favContacts=false',
                wildcard: "%QUERY"
            },
            limit: Number.MAX_VALUE
        });

        users.initialize();

        $('.typeahead').typeahead({
            hint: true,
            highlight: true,
            minLength: 3
        }, {
                name: 'users',
                displayKey: 'Name',
                source: users.ttAdapter(),
                limit: 10
            })
		$('.typeahead').bind('typeahead:selected', function (ev, user) {
            $("#RecipientId").val(user.Id);
        });

        var contacts = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace
            , remote: {
                url: '../Admin/ListUsers?name=%QUERY&hideOwnUser=true&favContacts=true',
                wildcard: "%QUERY"
            },
            limit: Number.MAX_VALUE
        });

        contacts.initialize();

        $('.contacttypeahead').typeahead({
            hint: true,
            highlight: true,
            minLength: 3
        }, {
            name: 'contacts',
            displayKey: 'Name',
            source: contacts.ttAdapter(),
            limit: 10
        })
		$('.contacttypeahead').bind('typeahead:selected', function (ev, user) {
            $("#ContactId").val(user.Id);
        });

    });

    function dropHandler(ev) {
        if (ev.dataTransfer.items) {
            if (ev.dataTransfer.items[0].kind === 'file') {
                var fileUpload = document.getElementById("pdfUpload");
                fileUpload.files = ev.dataTransfer.files;
                ValidateFileExtension(false);

            }
         }
            ev.preventDefault();

    }

    function dragOverHandler(ev) {
        ev.preventDefault();
    }

    function initChatScrollbar() {
        var pane = $('.chat-scroll-container');
        pane.jScrollPane({
            showArrows: false,
            resizeSensor: true
        });
        var api = pane.data('jsp');

        var pane_remind = $('.reminders-list');
        pane_remind.jScrollPane({
            showArrows: false,
            resizeSensor: true
        });
        var api_remind = pane_remind.data('jsp');
    }

    function ValidateFileExtension(update) {
        var pdfId = update ? "updatePDF" : "pdfUpload";
        var formData = new FormData();
        var file = document.getElementById(pdfId).files[0];

        if (!file) {
            return false;
        }
        formData.append("FileUpload", file);
        var extension = file.name.slice((file.name.lastIndexOf(".") - 1 >>> 0) + 2);

        if (!(extension && /^(jpg|png|jpeg|gif|pdf)$/.test(extension.toLowerCase()))) {
            alert("@Translate.Message("L2221")");
            return;
        }
        else {
            $.ajax({
                type: 'post',
                url: '@Url.Action("ValidateImage", "Common")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.data !== "Failed") {
                        $(".drop-area").addClass("hide");
                        if (update) {
                            if ($("#msg-textbox").val() == "") {
                                $("#msg-textbox").val(file.name);
                            }
                            sendResponse(false, pdfId);
                        }
                        else {
                            $(".doc-remove-container").removeClass("hide");
                            $('#UploadedFormNewMsg').html(file.name);
                        }
                    }
                    else {
                        alert("@Translate.Message("L2130")");
                    }
                },
                error: function (error) {
                    alert("@Translate.Message("L2221")");
                }
            });
        }
    }

    $('#new-msg-modal').on('open.zf.reveal', function () {
        $('#add-message button#submit').prop('disabled', false);
        $('#add-message button#draft').prop('disabled', false);
    });

    $('#add-message').foundation();
    $('#add-message')
        .on('forminvalid.zf.abide', function (ev) {
            var invalid_fields = $(this).find('[data-invalid]');
            console.log(invalid_fields);
        })
        .on('formvalid.zf.abide', function (ev) {
            var messageId = $("#messageId").val();
        var recipientId = $("#RecipientId").val();
        var subject = $("#subject").val();
        var messageBody = $("#messageBody").val();
        var isSent = !isDraft;
        var parentMessageId = null;
        var file = document.getElementById("pdfUpload").files[0];
        var formData = new FormData();

        $('#add-message button#submit').prop('disabled', true);
        $('#add-message button#draft').prop('disabled', true);

        formData.append("FileUpload", file);
        formData.append("messageId", messageId);
        formData.append("recipientId", recipientId);
        formData.append("subject", subject);
        formData.append("messageBody", messageBody);
        formData.append("isSent", isSent);

        $("#loader-wrapper").fadeIn();
        $.ajax({
            type: 'POST',
            url: "@Url.Action("AddEditMessage", "Message")",
            data: formData,
            dataType: "json",
            contentType: false,
            processData: false,
            success: function (data) {
                if (data.Result != null) {
                    $('#new-msg-modal').foundation('close');
                    $("#new-msg-modal").find('input:text, textarea').val('');
                    $(".drop-area").removeClass("hide");
                    $(".doc-remove-container").addClass("hide");
                    startIndex = 0;
                    pageSize = 10;
                    totalRecords = 0;
                    currentPage = 0;
                    totalPages = 0;
                    ListMessages(ownMessage, drafts, category, false, false);
                }
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
            RedirectToErrorPage(jqXHR.status);
        });
        $("#loader-wrapper").fadeOut();
    }).on("submit", function (ev) {
        ev.preventDefault();
        });

    function checkUpload() {
        if ($('#UserText').val() == "" || $('#subject').val() == "") {

			$("#upload-option").addClass("hide");
        }
        else {
            $("#upload-option").removeClass("hide");
        }
    }

    function GotoPage(page) {
        currentPage = page;
        startIndex = page * pageSize + 1;
        ListMessages(false, false, 1, false, false);
    }

    function ListMessages(OwnMessage, Drafts, Category, Search, Unread) {
        $("#loader-wrapper").show();
        var searchText = "";
        if (!Search) {
            ownMessage = OwnMessage;
            drafts = Drafts;
            category = Category;
        }
        else
        {
            searchText = $('#searchText').val();
        }
        var getCount = false;
        if (category != 3 && !Search) {
            getCount = true;
        }
		$.ajax({
            data: { isAdmin: true, ownMessage: ownMessage, drafts: drafts, getCount: getCount, searchText: searchText, unread: Unread, hasPagination: true, page: currentPage, pageSize: pageSize, totalRecords: totalRecords },
			url: "@Url.Action("GetMessageDashboard", "Message")",
			type: 'POST',
			dataType: "json",
			async: false,
			success: function (data) {
                if (data != null) {
					var messagesHtml = [];
					var messageCategory = ["", "message-board", "my-message", "drafts"];
                    const options = { month: 'short', day: 'numeric',hour: 'numeric', minute: 'numeric' };
                    $('#' + messageCategory[category] + '').html("");
                    //if (category == 3)
                        //messagesHtml += "<div class='msg-draft-top'><h6>Message Title</h6></div>";
                    messagesHtml += "<ul>";
                    if (data.model.parentMessages != null && data.model.parentMessages.length > 0) {
                        totalRecords = data.model.totalRecords;
                        totalPages = parseInt((totalRecords + pageSize - 1) / pageSize);
                        if (totalRecords > 0 && totalPages > 1) {
                            $('.pagination-area').removeClass("hide");
                            AddPager();
                        }
                        else {
                            $('.pagination-area').addClass("hide");
                        }
                        for (var i = 0; i < data.model.parentMessages.length; i++)
                        {
                            var ProfilePicture = "";
                            if (data.model.parentMessages[i].Picture != null)
                                ProfilePicture = "/ProfilePictures/" + data.model.parentMessages[i].Picture;
                            var date = new Date(parseInt(data.model.parentMessages[i].LastMessageDate.substr(6)));
                            var isRead = data.model.parentMessages[i].StatusId != 1 ? "" : "msg-unread";

                            if (category == 1) {
                                var noAction = data.model.parentMessages[i].NoActionNeeded ? "<span class='action-status'>No Action Needed</span>" : "";
                                messagesHtml += "<a onclick='GetMessageDetails(" + data.model.parentMessages[i].Id + ", " + data.model.parentMessages[i].CanShowUnread +")'><li class='grid-x " + isRead + "'><div class='cell large-3 small-6'><div class='msg-contact-img'><img src='" + ProfilePicture + "' /></div><div class='msg-contact-detail'>" + data.model.parentMessages[i].CreatorName + "<span>" + data.model.parentMessages[i].CreatorRole + "</span></div></div>";
                                messagesHtml += "<div class='cell large-6 large-order-2 small-12 small-order-3'><div class='msg-title-box'><p class='msg-title'>" + data.model.parentMessages[i].Subject + "</p>" + messageStatus[data.model.parentMessages[i].StatusId] + " <span class='msg-status msg-readby'>" + data.model.parentMessages[i].SeenBy +"</span></div></div>";
                                messagesHtml += "<div class='cell large-3 small-6 small-order-2 text-right'>";
                                if (data.model.parentMessages[i].hasAttachment) {
                                    messagesHtml += "<div class='f-icon'><img src='../Images/messages/attach_file.png' alt='' /></div>";
                                }
                                messagesHtml += "<div class='msg-time'><span>" + date.toLocaleDateString(undefined, options) + "</span>" + noAction +"</div></div></li></a>";
                            }
                            else if (category == 2) {
                                messagesHtml += "<a onclick='GetMessageDetails(" + data.model.parentMessages[i].Id + ", " + data.model.parentMessages[i].CanShowUnread +")'><li class='grid-x " + isRead + " align-justify'><div class='cell medium-7'><div class='msg-contact-img'><img src='" + ProfilePicture + "' /></div><div class='msg-contact-detail'>" + data.model.parentMessages[i].CreatorName + "</div></div>";
                                messagesHtml += "<div class='cell medium-5 small-6 small-text-left text-right'>";
                                if (data.model.parentMessages[i].hasAttachment) {
                                    messagesHtml += "<div class='f-icon'><img src='../Images/messages/attach_file.png' alt='' /></div>";
                                }
                                messagesHtml += "<div class='msg-time'><span>" + date.toLocaleDateString(undefined, options) + "</span></div></div>";
                                messagesHtml += "<div class='cell large-9 small-12 large-order-3 small-order-4'><div class='msg-title-box'><p class='msg-title'>" + data.model.parentMessages[i].Subject + "</p><p class='msg-text msg-body-preview'>" + data.model.parentMessages[i].RecentMessage + "</p>" + messageStatus[data.model.parentMessages[i].StatusId] + " <span class='msg-status msg-readby'>" + data.model.parentMessages[i].SeenBy +"</span></div></div>";
                                messagesHtml += "<div class='cell large-3 medium-12 small-6 text-right large-order-4 small-order-3'></div></li></a>";

                            }
                            else if (category == 3) {
                                messagesHtml += "<a onclick='GetMessageDetails(" + data.model.parentMessages[i].Id + ", " + data.model.parentMessages[i].CanShowUnread + ")'><li class='grid-x'><div class='cell large-3 small-6'><div class='msg-contact-img'><img src='" + ProfilePicture + "' /></div><div class='msg-contact-detail'>" + data.model.parentMessages[i].CreatorName + "<span>" + data.model.parentMessages[i].CreatorRole + "</span></div></div>";
                                messagesHtml += "<div class='cell large-6 large-order-2 small-12 small-order-3'><div class='msg-title-box'><p class='msg-title'>" + data.model.parentMessages[i].Subject + "</p><span class='msg-status msg-follow'>Draft</span></div></div>";
                                messagesHtml += "<div class='cell large-3 small-6 small-order-2 text-right'>";
                                if (data.model.parentMessages[i].hasAttachment) {
                                    messagesHtml += "<div class='f-icon'><img src='../Images/messages/attach_file.png' alt='' /></div>";
                                }
                                messagesHtml += "<div class='msg-time'><span>" + date.toLocaleDateString(undefined, options) + "</span></div></div></li></a>";
                            }
                        }
                        if (!Search && category != 3) {
                            updateMessageCount(data.model.messageCount)
                        }
                    }
                    else {
                        messagesHtml += "<div class='no-msg-container'><div class='no-msg'><img src='../Images/messages/no-msg.jpg'><h3>No Messages, Yet</h3><p>There are No Messages in your Inbox as yet!</p><p>You can start by creating a new message</p><button class='button' data-open='new-msg-modal' onclick='addNewMsg();' aria-controls='new-msg-modal' aria-haspopup='true' tabindex='0'>Create New</button></div></div>";
                        $('.pagination-area').addClass("hide");
                    }
                    messagesHtml += "</ul>";
                    $('#' + messageCategory[category] + '').html(messagesHtml);
                }
                $("#loader-wrapper").fadeOut('slow');
			},
			complete: function () {
				setTimeout(function(){
					var pane_msg_list = $('.tabs-panel.is-active .msg-list-container');
					pane_msg_list.jScrollPane({
						showArrows: false,
						resizeSensor: true
					});
					var api_msg_list = pane_msg_list.data('jsp');
				}, 600);

				showMessage();
			}
        });
	}

	function showMessage() {
        $(".msg-board .msg-list-container li, .my-msg-container .msg-list-container li").on("click", function () {
			$(".dashboard-middle-container, .attachments-container, .selected-chat-container").toggleClass("hide");
            /*var api = $('.chat-scroll-container').data('jsp');
            var api_remind = $('.reminders-list').data('jsp');*/
		});
	}

    function GetMessageDetails(messageId, showunread) {
        $("#messageId").val(0);
        showUnread = showunread;
        $.ajax({
            data: { messageId: messageId },
			url: "@Url.Action("GetMessageDetails", "Message")",
			type: 'POST',
			dataType: "json",
			success: function (data) {
                if (data != null) {
                    if (data.Record.Messages.length == 0)
                        $(".back-btn").trigger("click");
                    else
                    { 
                        $("#parentMessageId").val(messageId);
                        BindMessageDetail(data.Record.Messages)
                    }
				}
			},
			complete: function () {
                backToListing();
                document.getElementById("msg-textbox").addEventListener("mouseout", function () {
                    sendResponse(true, "updatePDF");
                }, false);
			}
        }).fail(function (jqXHR, textStatus, errorThrown) {
            RedirectToErrorPage(jqXHR.status);
        });
    }

    function backToListing() {
        $(".chat-heading-top a.back-btn").on("click", function (e) {
            e.preventDefault();
			$(".selected-chat-container, .attachments-container").addClass("hide");
            $(".dashboard-middle-container").removeClass("hide");
            if (type == 0 || type == 1)
            {
                if (unRead)
                    $("#type1").trigger("click");
                else
                    $("#msg-board").trigger("click");
            }
            if (type == 2)
                $("#my-msg").trigger("click");
            if (type == 3)
                $("#msg-draft").trigger("click");

		});
    }

    function addNewMsg() {
        isDraft = false;
        $("#new-msg-modal").find('input,textarea').val('');
        $("#messageId").val(0);
        $("#upload-option").addClass("hide");
        $("#upload-option .doc-remove-container").addClass("hide");
        $("#upload-option .drop-area").removeClass("hide");
        checkUpload();

    }

     function addOrRemoveFavoriteContacts(userId) {
    if(!(userId==""))
    {
        $.ajax({
            data: { FavoriteContactId: userId },
			url: "@Url.Action("AddOrRemoveFavoriteContact", "Message")",
			type: 'POST',
			dataType: "json",
			success: function (data) {
                if (data != null) {
                    if (data.data == true) {
                        $("#contactSearchText").val('');
                        $('#manage-contact-modal').foundation('close');
                    }
                    getFavoriteContacts('fav-mem-list');
                    getFavoriteContacts('fav-contact-list');
				}
			}
        }).fail(function (jqXHR, textStatus, errorThrown) {
            RedirectToErrorPage(jqXHR.status);
        });

    }
    }

    function messageFavoriteContact(contactName, id) {
        isDraft = false;
        $("#new-msg-modal").find('input,textarea').val('');
        checkUpload();

        $("#new-msg-modal #UserText").val(contactName);
        $('#RecipientId').val(id);

    }

    function getFavoriteContacts(controlToUpdate) {
        $.ajax({
			url: "@Url.Action("ListFavoriteContact", "Message")",
			type: 'POST',
			dataType: "json",
            success: function (data) {
                if (data != null) {
                    var messagesHtml = [];
                    messagesHtml += "<div class='fav-list-wrap'><ul>"
                    if (data.model.favoriteContacts != null && data.model.favoriteContacts.length > 0) {
                        for (var i = 0; i < data.model.favoriteContacts.length; i++) {
                            if (data.model.favoriteContacts[i].Picture != null)
                                var ProfilePicture = "";
                            ProfilePicture = "/ProfilePictures/" + data.model.favoriteContacts[i].Picture;
                            messagesHtml += " <li><a href='#' data-open='new-msg-modal' aria-controls='new-msg-modal' aria-haspopup='true' onclick='messageFavoriteContact(`" + data.model.favoriteContacts[i].ContactName + "`," + data.model.favoriteContacts[i].Id + ");'><div class='msg-contact-img'><img src='" + ProfilePicture + "' /></div><div class='msg-contact-detail'>" + data.model.favoriteContacts[i].ContactName + " <span>" + data.model.favoriteContacts[i].RoleName + "</span></div></a>";
                            if (controlToUpdate == 'fav-mem-list') {
                                messagesHtml += " <span><a href='#' onclick='addOrRemoveFavoriteContacts(" + data.model.favoriteContacts[i].Id + ");' class='remove-members'>Remove</a></span>";
                            }
                            messagesHtml += "</li>";
                        }
                    }
                    else {
                        messagesHtml += "<div class='msg-contact-detail'>No Favorite Contacts</div>";
                    }
                    messagesHtml += "</ul></div>";
                    $('#' + controlToUpdate + '').html(messagesHtml);
				}
			},
            complete: function() {
                setTimeout(function(){
                    var fav_mem_pane = $('.fav-list-wrap');
                    fav_mem_pane.jScrollPane({
                        showArrows: false,
                        resizeSensor: true
                    });
                    fav_mem_api = fav_mem_pane.data().jsp;
                }, 500);
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
            RedirectToErrorPage(jqXHR.status);
        });
    }

    function BindMessageDetail(messageDetails) {
        const options = { weekday: 'long', year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' };
        var noActionNeeded = messageDetails[(messageDetails.length - 1)].NoActionNeeded ? "checked disabled" : "";
        $("#parentMessageId").val(messageDetails[0].Id);
        $("#RecipientId").val(messageDetails[(messageDetails.length - 1)].CreatorId);
        $("#messageSubject").val(messageDetails[0].Subject);
        var messageDetailsHtml = [];
        var pdfHtml = [];
        var draftMsg ="", msgId, unReadOption = "";
        $('.no-attachments').removeClass('hide');
        $('#chat-message').html("");
        $('#reminders-list').html("");
        if (showUnread) {
            unReadOption = "<div class='dropdown-pane small msg-board-options ellipsis-dropdown' id='ellipsis-dropdown' data-close-on-click='true' data-dropdown data-auto-focus='true' data-position='bottom' data-alignment='right'><button class='close-button' data-close aria-label='Close dropdown menu' type='button'><span aria-hidden='true'>&times;</span></button><ul class='drop-menu-lv1'><li><a href='#' onclick='updateAction(" + messageDetails[(messageDetails.length - 1)].Id + ", " + false + ", " + true + ")' ><span>Mark as Unread</span></a></li></ul></div>";
        }
        var link = '@Url.Action("ParticipantProfile", "Participant")';
        messageDetailsHtml += "<section class='chat-section'><div class='admin-chat-heading'><div class='chat-heading-top'><a href='#' class='back-btn'>Back</a>";
        messageDetailsHtml += "<h5>" + messageDetails[0].Subject + "</h5><i class='fa fa-ellipsis-v ellipsis-dropdown' aria-hidden='true' data-toggle='ellipsis-dropdown'></i>";
        messageDetailsHtml += "" + unReadOption +"</div>";
        messageDetailsHtml += "<div class='chat-heading-btm'><div class='heading-partition'><div><div class='msg-contact-img'><img src='/ProfilePictures/" + messageDetails[0].MessageRecipients[0].OwnershipImage + "' /></div><a onclick='ViewParticipant(" + messageDetails[0].MessageRecipients[0].OwnershipId + ")'><div class='msg-contact-detail'>" + messageDetails[0].MessageRecipients[0].OwnershipName + "<span>" + messageDetails[0].MessageRecipients[0].OwnershipRole + "</span></div></a></div><div><div class='tick-buttons'><label><input type='checkbox' id='activate-button' onclick='updateAction(" + messageDetails[(messageDetails.length - 1)].Id + ", " + true + ", " + false +")' " + noActionNeeded +"/>No action needed<span class='checkmark'></span></label></div></div></div></div></div></div></div>";
		messageDetailsHtml += "<div class='message-chat'><div class='chat-scroll-container'><div class='chat-container'>";
        if (messageDetails != null && messageDetails.length > 0) {
            for (var i = 0; i < messageDetails.length; i++) {
                var date = new Date(parseInt(messageDetails[i].CreateDate.substr(6)));
                if (messageDetails[i].Attachment != null) {
                    $('.no-attachments').addClass('hide');
                    var deleteAttachment = "", myMsg = "doc-left";
                    if (messageDetails[i].CreatorName == null)
                        myMsg = "";
                    if (messageDetails[i].CanShowDelete) {
                        deleteAttachment = "<i class='fa fa-ellipsis-v chat-options' data-toggle='chat-options"+i+"'></i><div class='dropdown-pane' id='chat-options"+i+"' data-dropdown data-auto-focus='true' data-close-on-click='true' data-alignment='right' data-h-offset='-12' data-v-offset='-30'><div class='chat-opt-title'><p>Options</p> <img src='../Images/challenge/icon-down-arrow.png' alt='v'></div><div class='chat-opt-list'><ul><li onclick=deleteAttachment(" + messageDetails[i].Id + ",'" + messageDetails[i].Attachment +"')><img src='../Images/delete-icon-red.svg' alt=''> Delete</li></ul></div></div>";
                    }
                    messageDetailsHtml += "<div class='uploaded-doc " + myMsg + "'><div class='doc-detail'><img src='../Images/attachment-pdf.png' alt='PDF'><p>" + messageDetails[i].Attachment + "</p></div><div class='doc-action'><a href='../Messageuploads/" + messageDetails[i].Attachment + "' download><img src='../Images/chat-download-icon.jpg' alt='Download'></a>" + deleteAttachment +  "</div></div>";
                    pdfHtml.push("<div class='callout'><span class='due-tag'>Uploaded:" + date.toLocaleDateString(undefined, options) + "</span><p class='desc'>" +
                    "<img src='../Images/attachment-img.png' alt='Alternate Text' /> " + messageDetails[i].Attachment + "</p><p><a  href='../Messageuploads/" + messageDetails[i].Attachment + "' target='_blank'>See Details</a></p></div>");
                }
                if (messageDetails[i].IsSent) {
                    if (messageDetails[i].CreatorName == null) {
                        var seen = "", msgBody = "", deleteText = "";
                        if (messageDetails[i].CanShowDelete) {
                            deleteText = " &nbsp;<i class='fa fa-ellipsis-v chat-options' data-toggle='chat-options" + i + "'></i><div class='dropdown-pane' id='chat-options" + i + "' data-dropdown data-auto-focus='true' data-close-on-click='true' data-alignment='right' data-h-offset='-12' data-v-offset='-30'><div class='chat-opt-title'><p>Options</p> <img src='../Images/challenge/icon-down-arrow.png' alt='v'></div><div class='chat-opt-list'><ul><li onclick=deleteAttachment(" + messageDetails[i].Id + ",'" + messageDetails[i].Attachment + "')><img src='../Images/delete-icon-red.svg' alt=''> Delete</li></ul></div></div>";
                        }
                        if (messageDetails[i].MessageRecipients[0].IsRead != true) {
                            seen = "<span> | Not seen yet</span >";
                        }
                        else if (messageDetails[i].MessageRecipients[0].IsRead == true) {
                            seen = "<span> | Read</span >";
                        }
                        if (messageDetails[i].Attachment != messageDetails[i].MessageBody) {
                            msgBody = "<div class='chat-content'>" + messageDetails[i].MessageBody + deleteText + "</div>";
                        }
                        messageDetailsHtml += ("<div class='chat my-msg'><div class='chat-sender'>" + messageDetails[i].DisplayName + (messageDetails[i].CreatorRole != null ? ("<span>" + messageDetails[i].CreatorRole + "</span>") : "") + "</div>" + msgBody + "" +
                            "<div class='chat-date'>" + date.toLocaleDateString(undefined, options) + seen  + "</div></div>");
                    }
                    else if (messageDetails[i].Attachment != messageDetails[i].MessageBody) {
                        messageDetailsHtml += "<div class='chat'><div class='chat-sender'>" + messageDetails[i].CreatorName + (messageDetails[i].CreatorRole != null ? ("<span>" + messageDetails[i].CreatorRole + "</span>") : "") + "</div>" +
                            "<div class='chat-content'><p>" + messageDetails[i].MessageBody + "</p></div>" +
                            "<div class='chat-date'>" + date.toLocaleDateString(undefined, options) +"</div></div>";
                    }
                }
                else if (!messageDetails[i].IsSent && messageDetails[i].DisplayId == User)
                {
                    draftMsg = messageDetails[i].MessageBody;
                    msgId = messageDetails[i].Id;
                }
            }
        }
        messageDetailsHtml += "</div></div><div class='message-footer'><div class='doc-remove-container hide'><div><p id='UploadedForm'></p></div></div><input type='text' name='name' value='' /><textarea id='msg-textbox' class='msg-textbox'></textarea><label><input type='file' name='files' id='updatePDF' class='upload' accept='.pdf' onchange='ValidateFileExtension(" + true + ");' /></label><button type='submit' class='submit-chat' onclick='sendResponse(" + false + ");'></button></div></div></section>";
        $('#chat-message').html(messageDetailsHtml);
        $('#reminders-list').html(pdfHtml);
        if (draftMsg != "") {
            $("#msg-textbox").val(draftMsg);
            $("#messageId").val(msgId);
        }
        initChatScrollbar();


		$( "#chat-message" ).on( "click", "i.ellipsis-dropdown", function() {
		  $('#ellipsis-dropdown').foundation();
		});

		$( "#chat-message" ).on( "click", "i.chat-options", function() {
		  $(this).next('.dropdown-pane').foundation();
		});
    }

    function messagesType(type) {
        $("#searchText").val('');
        $(".msg-tabs-list li").removeClass("active-item");
        if (type == null) {
            $("#type0").addClass("active-item");
            unRead = false;
        }
        else {
            $("#type" + type + "").addClass("active-item");
            unRead = true;
        }
        startIndex = 0;
        pageSize = 10;
        totalRecords = 0;
        currentPage = 0;
        totalPages = 0;
		ListMessages(false, false, 1, false, unRead);

		if ($(window).width() <= 640)
			$(".msg-tabs-list ul").slideToggle();
    }

    function sidebar(ownMessage, drafts, category) {
        currentPage = 0;
        $("#searchText").val('');
        unRead = false;
        type = category;
        ListMessages(ownMessage, drafts, category, false, unRead);
        if (category == 1) {
            $("#type1").removeClass("active-item");
            $("#type0").addClass("active-item");
	    }
    }

    function editMessage(id) {
        $('#creatorId').val(id);
        $.ajax({
            data: { messageId: id },
			url: "@Url.Action("GetMessageDetails", "Message")",
			type: 'POST',
			dataType: "json",
            success: function (data) {
                if (data != null) {
                    $('#messageId').val(id);
                    $('#RecipientId').val(data.Record.Messages[0].MessageRecipients[0].RecipientId);
                    $('#UserText').val(data.Record.Messages[0].MessageRecipients[0].RecipientName);
                    $('#subject').val(data.Record.Messages[0].Subject);
                    $('#messageBody').val(data.Record.Messages[0].MessageBody);
                    if (data.Record.Messages[0].Attachment != null) {
                        $("#upload-option").removeClass("hide");
                        $(".doc-remove-container").removeClass("hide");
                        $(".drop-area").addClass("hide");
                        $('#UploadedFormNewMsg').html(data.Record.Messages[0].Attachment);
                    }
				}
			}
        }).fail(function (jqXHR, textStatus, errorThrown) {
            RedirectToErrorPage(jqXHR.status);
        });
        $('#new-msg-modal').foundation('open');
    }

    function updateMessageCount(messageCount) {
        $("#msg-board-count").addClass("hide");
        $("#my-msg-count").addClass("hide");
        if (messageCount.MessageBoardCount != 0) {
            $('#msg-board-count').html(messageCount.MessageBoardCount);
            $("#msg-board-count").removeClass("hide");
        }
        if (messageCount.MyMessagesCount != 0) {
            $('#my-msg-count').html(messageCount.MyMessagesCount);
            $("#my-msg-count").removeClass("hide");
        }
    }

    $("#messageSearch").on("click", function () {
        startIndex = 0;
        pageSize = 10;
        totalRecords = 0;
        currentPage = 0;
        totalPages = 0;
        ListMessages(null, null, null, true, false);
    });


    function sendResponse(update, uploadId) {
        var parentMessageId = $("#parentMessageId").val();
        var messageId = $("#messageId").val();
        var messageSubject = $("#messageSubject").val();
        var responseText = $("#msg-textbox").val().trim();
        var recipientId = $("#RecipientId").val();
        if (!update && responseText == "") {
            return false;
        }
        if (!update || responseText != "" || messageId != 0) {
            var formData = new FormData();
            if (uploadId == null)
            { var file = null; }
            else
            { var file = document.getElementById(uploadId).files[0]; }
            formData.append("FileUpload", file);
            if (file != undefined && responseText != file.name) {
                formData.append("messageId", 0);
                formData.append("messageBody", file.name);
            }
            else {
                formData.append("messageId", messageId);
                formData.append("messageBody", responseText);
            }
            formData.append("recipientId", recipientId);
            formData.append("subject", messageSubject);
            formData.append("isSent", !update);
            formData.append("parentMessageId", parentMessageId);
            $.ajax({
                data: formData,
                url: "@Url.Action("AddEditMessage", "Message")",
                type: 'POST',
                dataType: "json",
                contentType: false,
                processData: false,
                async: false,
                success: function (data) {
                    if (data != null) {
                        if (update) {
                            $("#messageId").val(data.updateResponse.updatedId);
                        }
                        else{
                            BindMessageDetail(data.Record.Messages);
                            //$("#msg-textbox").html("");
                            $("div.msg-list-item a").first().trigger("click");
                            if (!(file != undefined && responseText != file.name))
                                $("#messageId").val(0);
                        }
                    }
				},
				complete: function () {
					backToListing();
				}
            });
        }
    }

    function deleteAttachment(messageId, attachment) {
        $.ajax({
            url: "@Url.Action("DeleteAttachment", "Message")",
            type: 'POST',
            dataType: "json",
            data: { MessageId:messageId, AttachmentName:attachment },
                success: function (data) {
                    GetMessageDetails($("#parentMessageId").val(), false);
				}

            });
    }

    function ViewParticipant(Id) {
        var link = '@Url.Action("ParticipantProfile", "Participant", new { Id = "PId" })';
        window.location.href = link.replace("PId", Id)
    }


    function updateAction(messageId, noActionNeeded, markasUnread) {
        $.ajax({
            url: "@Url.Action("ActionUpdate", "Message")",
            type: 'POST',
            dataType: "json",
            data: { messageId: messageId, noActionNeeded: noActionNeeded, markasUnread: markasUnread },
            success: function (data) {
                if (noActionNeeded)
                    $("#activate-button").attr('disabled', true);
                else if (markasUnread) {
                    $('#ellipsis-dropdown').foundation('close');
                    $('#ellipsis-dropdown').remove();
                }
				}
            });
    }

</script>
