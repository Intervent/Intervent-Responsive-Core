@using InterventWebApp

<!--Reset Password Modal-->
@{
	string className = ViewData["LMCClass"] != null ? ViewData["LMCClass"].ToString() : "";
	string MetlifeSignUp = ViewData["MetLifeSignUp"] != null ? "true" : "false";
}
<div id="reset-password-modal" class="reveal small @className" data-reveal data-close-on-click="false" data-close-on-esc="false">
	<div class="grid-container">
		<div class="grid-x grid-margin-x">
			<div class="cell medium-12">
				<h2 class="text-center">@Translate.Message("L254")</h2>
				<div data-alert id="reset-failed" class="callout alert-box alert hide">
					@Translate.Message("L1633").
				</div>
			</div>
			<div class="cell">
				<form data-abide id="reset-password-form" novalidate="">
					<div class="grid-x grid-margin-x">
						<div class="form-password-field cell">
							<input type="password" id="NewPassword" placeholder="@Translate.Message("L466")" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$" required>
							<small class="form-error">@Translate.Message("L1929")</small>
							<div class="password-req-list">
								<p>@Translate.Message("L4269")</p>
								<ul>
									<li class="upper-char"><span>@Translate.Message("L4270")</span></li>
									<li class="lower-char"><span>@Translate.Message("L4271")</span></li>
									<li class="number-char"><span>@Translate.Message("L4272")</span></li>
									<li class="min-length"><span>@Translate.Message("L4273")</span></li>
								</ul>
							</div>
						</div>
						<div class="small-12 cell">
							<input type="password" id="ConfirmPassword" placeholder="@Translate.Message("L1628")" data-equalto="NewPassword" required>
							<small class="form-error">@Translate.Message("L263")</small>
						</div>
						@if (MetlifeSignUp == "false")
						{
							<div class="small-12 cell">
								<input type="text" id="resetDOB" placeholder="@string.Format(Translate.Message("L1362"), ViewData["DateFormat"])" class="fdatepicker" required>
								<small class="form-error">@Translate.Message("L1903")</small>
								<input id="tempResetDOB" type="hidden">
							</div>
						}
						<div class="cell">
							<button type="submit" class="pink expand">
								@Translate.Message("L254")
							</button>
						</div>
					</div>
				</form>
			</div>
			<button class="close-button" data-close aria-label="Close modal" type="button">
				<span aria-hidden="true">&times;</span>
			</button>
		</div>
	</div>
</div>

<script type="text/javascript">
    $("#resetDOB").on("change", function () {
        $('#tempResetDOB').val(moment($('#resetDOB').val(), "@ViewData["DateFormat"].ToString()").format('MM/DD/YYYY'));
    })
    //RESET PASSWORD FORM
    $(document).ready(function () {
        var count = 0;
        $('.fdatepicker').fdatepicker({
            format: "@ViewData["DateFormat"].ToString().ToLower()",
            disableDblClickSelection: true,
            pickTime: false,
            onRender: function (date) {
                return date.valueOf() > Date.now() ? 'disabled' : '';
            }
        });
        $('#reset-password-form').foundation();
        $('#reset-password-form')
            //When Not Valid
            .on('forminvalid.zf.abide', function () {
                var invalid_fields = $(this).find('[data-invalid]');
                console.log(invalid_fields);
            })
            //When Valid
            .on('formvalid.zf.abide', function () {
                var email = '@Context.Request.Query["Email"]';
                var token = '@Context.Request.Query["Token"]';
                var password = window.btoa(Math.random().toString(36).substring(2, 8) + $('#NewPassword').val());
                var dob = $('#tempResetDOB').val();
                email = email.replace("&#39;", "'");
                $.ajax({
                    url: "@Url.Action("ResetPassword", "Account")",
                    type: 'POST',
                    dataType: "json",
                    data: { Email: email, Token: token, NewPassword: password, DOB: dob },
                    success: function (data) {
                        if (data == 'success') {
                            $('.password-changed').removeClass('hide');
                            $('#logEmail').val(email);
                            $('#login-modal').foundation('open');
                        }
                        else if (data == 'wrongDOB') {
                            count++;
                            if (count >= 2) {
                                $("#reset-failed").text("@Html.Raw(string.Format(Translate.Message("L4468"), TempData.Peek("OrgContactEmail").ToString()))");
                            }
                            else {
                                $('#reset-password-modal').find('#reset-failed').removeClass('hide');
                                $("#reset-failed").text("@Translate.Message("L4469")");
                            }
                        }
                        else if(data == 'fail'){
                            $('#reset-password-modal').find('#reset-failed').removeClass('hide');
                        }
                        else {
                            $('#reset-password-modal').find('#reset-failed').removeClass('hide');
                            $("#reset-failed").text(data);
                        }
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    DisplayError(jqXHR.status);
                });
            })
            .on("submit", function (ev) {
                ev.preventDefault();
            });
    });
</script>

<script type="text/javascript" src="@Url.Content("~/Scripts/PasswordValidation.js")?v=@CommonUtility.GetRandom()"></script>