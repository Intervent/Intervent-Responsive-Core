@using InterventWebApp


<div id="signup-error" class="callout alert-box alert hide" data-closable>
    @Translate.Message("L1931")
    <button class="close-button" aria-label="Dismiss alert" type="button" data-close>
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<form id="sign-up-form" class="compass" data-abide novalidate>
    <!--replace with compass organization id-->
    <input type="hidden" id="organizationId" name="OrganizationId" value="@ViewData["OrgId"]" />
    <input type="hidden" id="organizationEmail" name="OrganizationEmail" value="@TempData.Peek("OrgContactEmail").ToString()" />
    <div class="grid-x grid-margin-x login-form">
        <div class="small-6 cell">
            <input type="text" id="firstName" name="FirstName" placeholder="@Translate.Message("L938")" required pattern="[a-zA-Z]+">
            <small class="form-error">@Translate.Message("L432")</small>
        </div>
        <div class="small-6 cell">
            <input type="text" id="lastName" name="LastName" placeholder="@Translate.Message("L939")" required pattern="[a-zA-Z]+">
            <small class="form-error">@Translate.Message("L433")</small>
        </div>
        <div class="small-12 cell">
            <input type="text" id="DOB" name="DOB" placeholder="@string.Format(Translate.Message("L1362"), ViewData["DateFormat"])" class="fdatepicker" data-validator="validateAGE" onchange="DateFormatter('DOB', '@ViewData["DateFormat"]')" required>
            <small id="ageError" class="form-error">@Translate.Message("L1903")</small>
            <input id="tempDOB" type="hidden">
        </div>
        <div class="small-12 cell select position-relative">
            <select id="inUserType" name="PersonnelType" required class="needsclick">
                <option value="">@Translate.Message("L1896")</option>
                <option value="E">@Translate.Message("L1897")</option>
                <option value="S">@Translate.Message("L1899")</option>
                <option value="C">@Translate.Message("L2399")</option>
                <option value="AD">@Translate.Message("L2400")</option>
            </select>
            <small class="form-error">@Translate.Message("L1900").</small>
            <i class="fa fa-question-circle has-tip tip-left" aria-hidden="true" data-tooltip data-allow-html="true" data-position="left" data-alignment="center" title="@string.Format(Translate.Message("L238"), ViewData["Name"], ViewData["ShortName"], ViewData["IDText"])"></i>
        </div>
        <div class="small-12 cell position-relative">
            <input type="text" id="CouponCode" name="UniqueID" placeholder="@ViewData["IDText"]" required>
            <small class="form-error">@string.Format(Translate.Message("L1895"), ViewData["IDText"]).</small>
        </div>
        <div class="small-12 cell email position-relative">
            <input type="email" id="signupemail" name="EmailAddress" placeholder="Email Address" required>
            <small class="form-error">@Translate.Message("L434")</small>
            <i class="fa fa-question-circle has-tip tip-left" aria-hidden="true" data-tooltip aria-haspopup="true" data-allow-html="true" title="@Translate.Message("L1988")"></i>
        </div>
        <div class="cell small-12">
            <input type="email" placeholder="@Translate.Message("L2468")" data-equalto="signupemail">
            <small class="form-error">@Translate.Message("L2469")</small>
        </div>
        <div class="cell small-12">
            <div class="form-password-field">
                <input type="password" id="password" name="Password" placeholder="@Translate.Message("L466")" pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$"
                    required aria-haspopup="true" class="has-tip tip-top">
                <small class="form-error" data-error-message>@Translate.Message("L1929")</small>

                <div class="password-req-list">
                    <p>Password must contain at least:</p>
                    <ul>
                        <li class="upper-char"><span>1 uppercase character</span></li>
                        <li class="lower-char"><span>1 lowercase character</span></li>
                        <li class="number-char"><span>1 number</span></li>
                        <li class="min-length"><span>Passwords must be a minimum of 8 characters in length</span></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="cell small-12">
            <input type="password" placeholder="@Translate.Message("L1628")" data-equalto="password">
            <small class="form-error">@Translate.Message("L438")</small>
        </div>
        <div class="small-12 cell">
            <input type="checkbox" id="serviceagreement" required>@Translate.Message("L441") <a href="#" onclick="ServiceAgreement(true);">@Translate.Message("L440")</a>
            <small class="form-error">@Translate.Message("L442")</small>
        </div>
        <div class="small-12 cell">
            <button type="submit" value="" class="expand pink">@Translate.Message("L443")</button>
        </div>
        <input type="hidden" name="IDText" value="@ViewData["IDText"]" />
    </div>
</form>

<!--Email Confirmation Modal-->
<div id="confirmation-modal" class="reveal small" data-reveal>
    <div class="grid-x grid-margin-x">
        <div class="cell small-12">
            <p>
                @Translate.Message("L1932")
            </p>
        </div>
        <div class="small-12 cell">
            <button class="expand pink middle" href="" onclick="$('#login-modal').foundation('open'); return false;">
                @Translate.Message("L426")
            </button>
        </div>
    </div>
    <button class="close-button" data-close aria-label="Close modal" type="button">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<!--Primary DOB Confirmation Modal-->
<div id="register-primaryuserinfo-confirmation-modal" class="reveal small" data-reveal>
    <form id="primaryuserinfo-confirmation-modelform" data-abide>
        <input type="hidden" id="primaryVerificationRegisterInfo" name="RegisterData" />
        <p>
            @Translate.Message("L1933")
        </p>
        <div class="grid-x grid-margin-x">
            <div class="small-12 cell">
                <input type="text" id="primaryDOB" name="DOB" class="fdatepicker" placeholder="@string.Format(Translate.Message("L1362"), ViewData["DateFormat"])" onchange="DateFormatter('primaryDOB', '@ViewData["DateFormat"]')" required>
                <small class="form-error">@Translate.Message("L1903")</small>
                <input id="tempPrimaryDOB" type="hidden">
            </div>
            <div class="cell small-12">
                <button id="register-primaryuserinfo-modal-close" class="pink right">Submit</button>
            </div>
        </div>
        <button class="close-button" data-close aria-label="Close modal" type="button">
            <span aria-hidden="true">&times;</span>
        </button>
    </form>

</div>

<!-- Error Modal-->
<div id="error-modal" class="reveal small" data-reveal>
    <div class="grid-x grid-margin-x">
        <div class="cell small-12">
            <h2 class="text-center"></h2>
            <p>
                <span id="error-message-genericmodal"></span>
                @*@Translate.Message("L479")*@
            </p>
        </div>
    </div>
    <button class="close-button" data-close aria-label="Close modal" type="button">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<script type="text/javascript" src="@Url.Content("~/Scripts/AgeValidation.js")?v=@CommonUtility.GetRandom()"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/RegistrationSignIn.js")?v=@CommonUtility.GetRandom()"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/DateFormatter.js")?v=@CommonUtility.GetRandom()"></script>
<script>
    $("#primaryDOB").on("change", function () {
        $('#tempPrimaryDOB').val(moment($('#primaryDOB').val(), "@ViewData["DateFormat"].ToString()").format('MM/DD/YYYY'))
    })
    Foundation.Abide.defaults.validators['validateAGE'] = function ($el, required, parent) {
        $('#tempDOB').val(moment($('#DOB').val(), "@ViewData["DateFormat"].ToString()").format('YYYY/MM/DD'));
        var DOB = $("#tempDOB").val();
        var valid = validateage(DOB);
        if (valid == false) {
            $("#AgeError").text('@InterventWebApp.Translate.Message("L1986")');
            return valid;
        }
        else
            return valid;
    };
    $(document).ready(function () {
        DateFormatter("DOB", "@ViewData["DateFormat"]");
        DateFormatter("primaryDOB", "@ViewData["DateFormat"]");
        var startDOB = new Date();
        startDOB.setFullYear(startDOB.getFullYear() - 100);
        $('.fdatepicker').fdatepicker({
            format: "@ViewData["DateFormat"].ToString().ToLower()",
            disableDblClickSelection: true,
            pickTime: false,
            startDate: startDOB,
            onRender: function (date) {
                return date.valueOf() > Date.now() ? 'disabled' : '';
            }
        });
        $('#sign-up-form').foundation();
        $('#sign-up-form')
        //When Not Valid
        .on('forminvalid.zf.abide', function () {
            var invalid_fields = $(this).find('[data-invalid]');
            console.log(invalid_fields);
        })
        //When Valid
            .on('formvalid.zf.abide', function () {
                $('#DOB').val($('#tempDOB').val());
                if (document.getElementById('serviceagreement').checked) {
                    $.ajax({
                        url: "@Url.Action("RegisterUsingEligibility", "Account")",
                        type: 'POST',
                        dataType: "json",
                        data: $("#sign-up-form").serialize(),
                        success: function (data) {
                            if (data.Success) {
                                var username = $('#signupemail').val();
                                var password = $('#password').val();
                                var organizationEmail = $('#supportEmail').val();
                                var loginURL = "@Url.Action("Login", "Account")";
                                var streamURL = "@Url.Action("Stream", "Participant")";
                                validateSignIn(data, username, password, organizationEmail, loginURL, streamURL);
                                $('.register-modal-email').text($('#signupemail').val());
                                document.getElementById("sign-up-form").reset();
                            }
                            else {
                                if (data.Action != undefined) {
                                    if (data.Action == 'VerifyPrimaryInfo') {
                                        //verify primary user info
                                        $('#register-primaryuserinfo-confirmation-modal').foundation('open');
                                        $('#primaryVerificationRegisterInfo').val(data.RegisterData);
                                    }

                                }
                                else {
                                    $('#error-modal').foundation('open');
                                    $("#error-message-genericmodal").text(data.ErrorMessage);
                                    $('#primaryVerificationRegisterInfo').val(data.RegisterData);
                                }
                            }
                        }
                    }).error(function (jqXHR, textStatus, errorThrown) {
                            DisplayError(jqXHR.status);
                        });
                }
                $('#DOB').val(moment($('#tempDOB').val()).format("@ViewData["DateFormat"].ToString()"));
        }).on('submit',function(e){
           e.preventDefault();
        });

        $('#primaryuserinfo-confirmation-modelform').foundation();
        //PRIMARY USER DOB confirmation
        $('#primaryuserinfo-confirmation-modelform')
       //When Not Valid
       .on('forminvalid.zf.abide', function () {
           var invalid_fields = $(this).find('[data-invalid]');
           console.log(invalid_fields);
       })
       //When Valid
       .on('formvalid.zf.abide', function () {
           $('#primaryDOB').val($('#tempPrimaryDOB').val());
           $.ajax({
               url: "@Url.Action("VerifyPrimaryUserInformation", "Account")",
               type: 'POST',
               dataType: "json",
               data: $("#primaryuserinfo-confirmation-modelform").serialize(),
               success: function (data) {
                   if (data.Success) {
                       $('#confirmation-modal').foundation('open');
                       $('.register-modal-email').text($('#signupemail').val());
                   }
                   else {
                       $('#error-modal').foundation('open');
                       $("#error-message-genericmodal").text(data.ErrorMessage);
                   }
               }
           }).error(function (jqXHR, textStatus, errorThrown) {
                    DisplayError(jqXHR.status);
              });
       }).on("submit", function (ev) {
                    ev.preventDefault();
         })
    });


</script>

<script>
	$(document).ready(function () {
		$('#password').on('keypress', function (e) {
			var $this = $(this),
				code = e.keyCode || e.which;
			codeStr = String.fromCharCode(code);
			console.log(codeStr);
			if (/^[a-z]$/.test(codeStr)) {
				$("li.lower-char").addClass("is-active");
			}
			else if (/^[A-Z]$/.test(codeStr)) {
				$("li.upper-char").addClass("is-active");
			}
			else if (/^[0-9]$/.test(codeStr)) {
				$("li.number-char").addClass("is-active");
			}
		});

		$('#password').on("keyup", function (e) {
			// var $this = $(this);
			var str = $('#password').val();
			if (str.replace(/\s+/g, '').length >= 8) {
				$("li.min-length").addClass("is-active");
			}
			else {
				$("li.min-length").removeClass("is-active");
			}

			if (!/[a-z]/.test(str)) {
				$("li.lower-char").removeClass("is-active");
			}
			if (!/[A-Z]/.test(str)) {
				$("li.upper-char").removeClass("is-active");
			}
			if (!/[0-9]/.test(str)) {
				$("li.number-char").removeClass("is-active");
			}
		});

		$('#password, #inpassword').on('focus', function (e) {
			if (window.innerHeight < window.innerWidth && window.innerWidth < 1024) {
				var scrollPos = $('#password, #inpassword').offset().top - 80;
			}
			$('html, body').animate({
				scrollTop: scrollPos
			}, 500);
		});
	});
</script>