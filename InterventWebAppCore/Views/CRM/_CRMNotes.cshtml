@model InterventWebApp.CRMProfileModel
@using InterventWebApp

<div id="new-record" class="grid-x grid-margin-x">
    @{ Html.RenderPartial("_CRMProfileDetails", Model); }

    <div class="cell large-8">
        <div class="crm-form-title align-justify align-middle flex-container crm-details-container">
            <h2>@(Model.CRM_Note.Id == 0 ? "New Record" : "Edit Record")</h2>
            <a href="" id="close-record-form">Close</a>
        </div>

        <div class="create-profile-form">
            <form data-abide novalidate id="notes-from" autocomplete="off" class="form-component">
                <div class="form-section">
                    <div class="grid-x grid-margin-x">
                        <div class="cell medium-6">
                            <label for="" class="options-main-label">Type</label>
                            <div class="flex-container">
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.Type, 2, new Dictionary<string, object> { { "id", "TypeCall" }, { "Name", "CRM_Note.Type" }, { "data-validator", "validateType" } })
                                    <label for="TypeCall">
                                        Call
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.Type, 1, new Dictionary<string, object> { { "id", "TypeEmail" }, { "Name", "CRM_Note.Type" }, { "data-validator", "validateType" } })
                                    <label for="TypeEmail">
                                        Email
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                @if (Model.CRM_Note != null && Model.CRM_Note.Type == 3)
                                {
                                    <div class="tick-buttons radio-btn">
                                        @Html.RadioButtonFor(M => M.CRM_Note.Type, 3, new Dictionary<string, object> { { "id", "TypeWebform" }, { "Name", "CRM_Note.Type" }, { "data-validator", "validateType" } })
                                        <label for="TypeWebform">
                                            Webform
                                            <span class="checkmark"></span>
                                        </label>
                                    </div>
                                }
                                <small class="form-error inline-error-message" data-form-error-for="TypeEmail" id="typeError">@Translate.Message("L480")</small>
                            </div>
                        </div>
                        <div class="cell medium-6" id="disposition-card-cell">
							<label for="">
								Disposition
								@Html.DropDownListFor(m => m.CRM_Note.Disposition, Model.Dispositions, "----Select----", new Dictionary<string, object> { { "id", "Disposition" }, { "class", "Disposition" } })
								<small class="form-error">Disposition is required</small>
							</label>
                        </div>
                    </div>
                    <div class="grid-x grid-margin-x">
                        <div class="cell medium-6" id="inquiry-type-cell">
							<label for="">
								Inquiry Type
								@Html.DropDownListFor(m => m.CRM_Note.InquiryType, Model.InquiryTypes, "----Select----")
								<small class="form-error">Inquiry Type is required</small>
							</label>
                        </div>
                        <div class="cell medium-6">
							<label for="">
								Caller Profile
								@Html.DropDownListFor(m => m.CRM_Note.CallerProfileType, Model.CallerProfileTypes, "----Select----", new { @required = "required", @id = "caller-profile" })
								<small class="form-error">Caller Profile is required</small>
							</label>
                        </div>

                        <div class="cell medium-6">
							<label for="">
								Coupon Code
								@Html.TextBoxFor(m => m.CRM_Note.CouponCode, new Dictionary<string, object> { { "placeholder", "Coupon Code" }, { "maxLength", "50" }, { "data-validator", "validateCouponCode" } })
								<small class="form-error">Coupon Code already used</small>
							</label>
                        </div>

                        <div class="cell" id="cartridgePrescriptions" hidden>
							<label for="">
								Where did you pick up your cartridge prescriptions?
								@Html.TextBoxFor(m => m.CRM_Note.CartridgePrescriptions, new Dictionary<string, object> { { "placeholder", "Where did you pick up your cartridge prescriptions?" }, { "maxLength", "250" } })
							</label>
                        </div>

                        <div class="cell escalation-card-cell" id="hcp-doctor-details">
                            <div class="escalation-card create-profile-form">
                                <div class="grid-x grid-margin-x grid-margin-y">
                                    <div class="cell doctor-search-form">
										<label>
											Select HCP
											<input type="search" placeholder="Choose your hcp" class="animated-search-form" id="search-id" data-validator="validateHCP">
											<input type="hidden" id="hcp-id" name="CRM_Note.HCPId" />
											<small class="form-error" id="hcp-error">HCP required</small>
										</label>
                                        <div class="ini-medi-list">
                                            <div class="no-search-result text-center" id="no-results">
                                                <i class='fa fa-frown-o'></i>
                                                <h6>HCP name not found</h6>
                                            </div>
                                            <div class="medi-search-list" id="ini-medi-list"></div>

                                            <div class="medi-not-found"><a href="#" id="advancedSearch">Add New HCP</a></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="grid-x grid-margin-x grid-margin-y" id="add-doctor-details">
                                    <div class="cell"><p>Please enter your HCP details:</p></div>
                                    <div class="cell medium-6">
										<label>
											HCP First Name
											<input type="text" placeholder="First Name of HCP" id="HCPFirstName" name="CRM_Note.FirstName" />
											<small class="form-error">FirstName is required</small>
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP Last Name
											<input type="text" placeholder="Last Name of HCP" id="HCPLastName" name="CRM_Note.LastName" />
											<small class="form-error">LastName is required</small>
										</label>
                                    </div>
                                    <div class="cell">
										<label>
											HCP Address
											<input type="text" placeholder="Address Line 1" id="Address1" name="CRM_Note.Address1" />
											<small class="form-error">Address Line 1 is required</small>
										</label>
                                    </div>
                                    <div class="cell">
										<label>
											HCP Address
											<input type="text" placeholder="Address Line 2" id="Address2" name="CRM_Note.Address2" />
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP City
											<input type="text" placeholder="HCP City" id="City" name="CRM_Note.City" />
											<small class="form-error">City is required</small>
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP State
											@Html.DropDownListFor(m => m.CRM_Note.State, Model.States, "----Select----")
											<small class="form-error">State is required</small>
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP Zip Code
											<input type="text" placeholder="HCP Zip Code" id="Zipcode" name="CRM_Note.Zipcode" />
											<small class="form-error">Zip Code isrequired</small>
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP Phone Number
											<input type="text" placeholder="HCP Phone Number" id="PhoneNumber" name="CRM_Note.PhoneNumber" />
											<small class="form-error">Phone Number required</small>
										</label>
                                    </div>
                                    <div class="cell medium-6">
										<label>
											HCP Email
											<input type="email" placeholder="HCP Email Address" id="Email" name="CRM_Note.Email" />
										</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="cell medium-6">
							<label for="">
								Full Name (if different from customer)
								@Html.TextBoxFor(m => m.CRM_Note.FullName, new { @pattern = "[a-zA-Z]+", @placeholder = "Full Name", @maxLength = 50 })
							</label>
                        </div>

                        <div class="cell medium-6">
							<label for="">
								Account Type
								@Html.DropDownListFor(m => m.CRM_Note.AccountType, Model.AccountTypes, "----Select----", new { @required = "required" })
								<small class="form-error">Account Type is required</small>
							</label>
                        </div>

                        <div class="cell medium-6">
                            <label for="">
                                Contact Classification
                                @Html.DropDownListFor(m => m.CRM_Note.ComplaintClassificationType, Model.ComplaintClassificationTypes, "----Select----", new Dictionary<string, object> { { "id", "ClassificationTypes" }, { "Name", "CRM_Note.ComplaintClassificationType" }, { "required", "required" } })
                                <small class="form-error">Contact Classification is required</small>
                            </label>
                        </div>

                        <div class="cell medium-6">
							<label>
								Pogo Serial Number
								@Html.DropDownListFor(m => m.CRM_Note.PogoMeterNumber, Model.PogoMeterNumbers, "----Select----", new Dictionary<string, object> { { "id", "PogoMeterNumber" }, { "Name", "CRM_Note.PogoMeterNumber" } })
							</label>
                        </div>

                        <div class="cell medium-6">
                            <label for="" class="options-main-label">Required Escalation?</label>
                            <div class="flex-container">
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.RequiredEscalation, 1, new Dictionary<string, object> { { "id", "yesEscalation" }, { "data-validator", "validateEscalation" } })
                                    <label for="yesEscalation">
                                        Yes
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.RequiredEscalation, 2, new Dictionary<string, object> { { "id", "noEscalation" }, { "data-validator", "validateEscalation" } })
                                    <label for="noEscalation">
                                        No
                                        <span class="checkmark"></span>
                                    </label>
                                </div>

                                <small class="form-error inline-error-message" data-form-error-for="noEscalation" id="escalationError">@Translate.Message("L480")</small>
                            </div>
                        </div>

                        <div class="cell medium-6 classification" id="rma">
                            <label for="" class="options-main-label">RMA Required?</label>

                            <div class="flex-container">
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.RequiredRMA, 1, new Dictionary<string, object> { { "id", "yesRma" }, { "data-validator", "validateRMA" } })
                                    <label for="yesRma" id="forYesRMA">
                                        Yes
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.RequiredRMA, 2, new Dictionary<string, object> { { "id", "noRma" }, { "data-validator", "validateRMA" } })
                                    <label for="noRma">
                                        No
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <small class="form-error inline-error-message" data-form-error-for="noRma" id="rmaError">@Translate.Message("L480")</small>
                            </div>
                        </div>

                        <div class="cell escalation-card-cell" id="rma-details">
                            <div class="escalation-card">
								<label for="">
									RMA Number
									@Html.TextBoxFor(m => m.CRM_Note.RMANumber, new { @id = "RMANumber" })
									<small class="form-error">RMANumber is required</small>
								</label>
                            </div>
                        </div>

                        <div class="cell escalation-card-cell" id="qad-details">
                            <div class="escalation-card">
								<label for="">
									QAD Sales Order Number
									@Html.TextBoxFor(m => m.CRM_Note.QADNumber, new { @id = "QADNumber" })
								</label>
                            </div>
                        </div>

                        <div class="cell medium-6 classification" id="masterControlNo">
							<label for="">
								Master Control Number
								@Html.TextBoxFor(m => m.CRM_Note.MasterControlNo, new { @id = "MasterControlNo", @placeholder = "Master Control Number", @maxLength = 50 })
								<small class="form-error">Master Control Number is required</small>
							</label>
                        </div>

                        <div class="cell medium-6 classification" id="cartridgeLotNumber">
							<label for="">
								Cartridge Lot Number
								@Html.TextBoxFor(m => m.CRM_Note.CartridgeLotNumber, new { @placeholder = "Cartridge Lot Number", @maxLength = 50 })
							</label>
                        </div>

                        <div class="cell">
							<label for="">
								Call Notes
								@Html.TextAreaFor(m => m.CRM_Note.Notes, new { placeholder = "Call Notes", required = "required" })
								<small class="form-error">Call Notes is required</small>
							</label>
                        </div>

                        <div class="cell medium-6">
                            <label for="" class="options-main-label">First Call Resolution</label>
                            <div class="flex-container">
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.FirstCallResolution, 1, new Dictionary<string, object> { { "id", "yesResolution" }, { "data-validator", "validateResolution" } })
                                    <label for="yesResolution">
                                        Yes
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.FirstCallResolution, 2, new Dictionary<string, object> { { "id", "noResolution" }, { "data-validator", "validateResolution" } })
                                    <label for="noResolution">
                                        No
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <small class="form-error inline-error-message" data-form-error-for="noResolution" id="resolutionError">@Translate.Message("L480")</small>
                            </div>
                        </div>

                        <div class="cell medium-6">
                            <label for="" class="options-main-label">POGO Champion</label>
                            <div class="flex-container">
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.POGOChampion, 1, new Dictionary<string, object> { { "id", "yesChampion" } })
                                    <label for="yesChampion">
                                        Yes
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <div class="tick-buttons radio-btn">
                                    @Html.RadioButtonFor(M => M.CRM_Note.POGOChampion, 2, new Dictionary<string, object> { { "id", "noChampion" } })
                                    <label for="noChampion">
                                        No
                                        <span class="checkmark"></span>
                                    </label>
                                </div>
                                <small class="form-error inline-error-message" data-form-error-for="noChampion" id="championError">@Translate.Message("L480")</small>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-submit new-button">
                    <button type="submit" class="button">Save</button>
                </div>

                @Html.HiddenFor(x => x.CRM_Note.Id)
                @Html.HiddenFor(x => x.CRM_Note.ContactId)
                @if (Model.CRM_Note.HCPList != null)
                {
                    <input type="hidden" id="hiddenHCPName" value="@Model.CRM_Note.HCPList.FirstName  @Model.CRM_Note.HCPList.LastName" />
                }
            </form>
        </div>
    </div>
</div>
<script>
    Foundation.Abide.defaults.validators['validateType'] = function ($el, required, parent) {
        if ($("input[name='CRM_Note.Type']:checked").length == 0) {
            return false;
        }
        else {
            $("#typeError").removeClass('is-visible');
            return true;
        }
    };
    Foundation.Abide.defaults.validators['validateHCP'] = function ($el, required, parent) {
        if (($('#caller-profile').find(":selected").val() == 3 || $("#CRM_Note_CouponCode").val() != "") && !$("#HCPFirstName").prop('required') && ($('#search-id').val() == '' || $("input[name='CRM_Note.HCPId']").val() == '')) {
            return false;
        }
        else {
            return true;
        }
    };
    Foundation.Abide.defaults.validators['validateEscalation'] = function ($el, required, parent) {
        if ($("input[name='CRM_Note.RequiredEscalation']:checked").length == 0) {
            return false;
        }
        else {
            $("#escalationError").removeClass('is-visible');
            return true;
        }
    };
    Foundation.Abide.defaults.validators['validateRMA'] = function ($el, required, parent) {
        if ($("input[name='CRM_Note.RequiredRMA']:checked").length == 0) {
            return false;
        }
        else {
            $("#rmaError").removeClass('is-visible');
            return true;
        }
    };
    Foundation.Abide.defaults.validators['validateResolution'] = function ($el, required, parent) {
        if ($("input[name='CRM_Note.FirstCallResolution']:checked").length == 0) {
            return false;
        }
        else {
            $("#resolutionError").removeClass('is-visible');
            return true;
        }
    };
    Foundation.Abide.defaults.validators['validateCouponCode'] = function ($el, required, parent) {
        var isValid = false;
        if ($("#CRM_Note_CouponCode").val() != "") {
            $("#cartridgePrescriptions").show();
            var couponCode = $("#CRM_Note_CouponCode").val();
            var contactId = $('#newContactId').val();
            $.ajax({
                data: { couponCode: couponCode, contactId: contactId },
                dataType: "json",
                async: false,
                type: 'POST',
                url: '@Url.Action("ValidateCouponCode", "CRM")',
                success: function (data) {
                    isValid = data.isValidCouponCode;
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                RedirectToErrorPage(jqXHR.status);
            });

                return isValid;
            }
            else {
                $("#cartridgePrescriptions").hide();
                return true;
            }
    };
    $(document).ready(function () {
        $('#newContactId').val(@Model.CRM_Contact.Id);
		$("#notes-from, #doctor-details").foundation();
        $('#notes-from')
            .on('forminvalid.zf.abide', function () {
            var invalid_fields = $(this).find('[data-invalid]');
            if (invalid_fields) {
                var scrollTo = $('#' + invalid_fields[0].id).position().top;
                $('body, html').animate({
                    scrollTop: scrollTo
                }, 400);
            }
        })
            .on('formvalid.zf.abide', function () {
            $.ajax({
                url: "@Url.Action("AddEditNotes", "CRM")",
                type: 'POST',
                dataType: "json",
                data: $("#notes-from").serialize(),
                success: function (data) {
                    if (data.response.success) 
                    {
                        $("#notes-from").find('input:text, number, input:password, input:file, select, textarea, :input').val('');
                        $("#new-record").html('');
                        RefreshListNotes(@Model.CRM_Contact.Id, 0);
                        showAlertMessage("Note saved successfully");
                        window.scrollTo(0, 0);
                    }
                }
            })
        })
        // to prevent form from submitting upon successful validation
        .on('submit', function (e) {
            e.preventDefault();
        });
        $("#CRM_Note_CouponCode").trigger("change");
        if ('@Model.CRM_Note.RequiredRMA' == '1') {
            $("#rma-details").slideToggle();
            $("#RMANumber").prop('required', true);
        }
        if ('@Model.CRM_Note.RequiredRMA' == '2') {
            $("#qad-details").slideToggle();
        }
        if ('@Model.CRM_Note.CallerProfileType' == '3' || '@Model.CRM_Note.CouponCode' != '') {
            $("#hcp-id").prop('required', true);
            $("#hcp-doctor-details").show();
            $("#foo").trigger("click");

        }
        if ('@Model.CRM_Note.HCPId' != '') {
            $("#hcp-id").val('@Model.CRM_Note.HCPId');
            $("#search-id").val($("#hiddenHCPName").val());

        }

        $('input[name="CRM_Note.RequiredRMA"]').on('click', function () {
            if (this.value == 1) {
                $("#RMANumber").prop('required', true);
                $("#QADNumber").val('');
                $("#rma-details").show();
                $("#qad-details").hide();
            }
            else {
                $("#RMANumber").prop('required', false);
                $("#RMANumber").val('');
                $("#rma-details").hide();
                $("#qad-details").show();
            }
        });

        $("input#TypeEmail").on('change', function () {
            if ($('#Disposition :selected').val() != '' && $('#Disposition :selected').val() == $('.Disposition option:last').val()) {
                $('#Disposition').val('');
            }
            $("#Disposition option").each(function () {
                if (this.value != '') {
                    if (this.value == $('.Disposition option:last').val()) {

                        $("#Disposition option[value=" + this.value + "]").hide();
                    }
                    else {
                        $("#Disposition option[value=" + this.value + "]").show();
                    }
                    $("#container").append(this.value + ' ');
                }
            });
            $("#disposition-card-cell").show();
            $("#Disposition").prop('required', true);
            $('#CRM_Note_InquiryType').val('');
            $("#inquiry-type-cell").hide();
            $("#CRM_Note_InquiryType").prop('required', false);
        });

        $("input#TypeWebform").on('change', function () {
            if ($('#Disposition :selected').val() != '' && $('#Disposition :selected').val() != $('.Disposition option:last').val()) {
                $('#Disposition').val('');
            }
            $("#Disposition option").each(function () {
            if (this.value != '') {
                if (this.value == $('.Disposition option:last').val()) {
                    $("#Disposition option[value=" + this.value + "]").show();
                }
                else {
                    $("#Disposition option[value=" + this.value + "]").hide();
                }
                $("#container").append(this.value + ' ');
            }
        });
            $("#disposition-card-cell").show();
            $("#Disposition").prop('required', true);
            $("#inquiry-type-cell").show();
            $("#CRM_Note_InquiryType").prop('required', true);
        });

        if ('@Model.CRM_Note.Type' == '1') {
            $("#disposition-card-cell").show();
            $("#Disposition").prop('required', true);
            $("input#TypeEmail").trigger("change");
        }
        else if ('@Model.CRM_Note.Type' == '3') {
            $("#disposition-card-cell").show();
            $("#Disposition").prop('required', true);
            $("#inquiry-type-cell").show();
            $("#CRM_Note_InquiryType").prop('required', true);
            $("input#TypeWebform").trigger("change");
        } else {
            $("#disposition-card-cell").hide();
            $("#Disposition").prop('required', false);
            $("#inquiry-type-cell").hide();
            $("#CRM_Note_InquiryType").prop('required', false);
        }

        $("input#TypeCall").on('change', function () {
            $('#Disposition').val(null);
            $("#disposition-card-cell").hide();
            $("#Disposition").prop('required', false);
            $('#CRM_Note_InquiryType').val('');
            $("#inquiry-type-cell").hide();
            $("#CRM_Note_InquiryType").prop('required', false);
        });

        if ($('#ClassificationTypes').val() == '3') {
            $("#MasterControlNo").prop('required', true);
        } else {
            $("#MasterControlNo").prop('required', false);
        }

        $("#ClassificationTypes").on('change', function () {
            if ($('#ClassificationTypes').val() == '3') {
                $("#MasterControlNo").prop('required', true);
            } else {
                $("#MasterControlNo").prop('required', false);
            }
		});

        $("select#caller-profile").on("change", function () {
            if ($('#caller-profile').find(":selected").val() == 3) {
                $("#hcp-id").prop('required', true);
                $("#hcp-doctor-details").show();
            }
            else if ($("#CRM_Note_CouponCode").val() == ""){
                $("#hcp-id").prop('required', false);
                $("#hcp-doctor-details").hide();
            }
        });

        $("#CRM_Note_CouponCode").on("change", function () {
            if ($("#CRM_Note_CouponCode").val() != "") {
                $("#hcp-id").prop('required', true);
                $("#hcp-doctor-details").show();
            }
            else if ($('#caller-profile').find(":selected").val() != 3){
                $("#hcp-id").prop('required', false);
                $("#hcp-doctor-details").hide();
            }
        });
    });

    $("#close-record-form").on('click', function (e) {
        e.preventDefault();
        RefreshListNotes($('#newContactId').val(), 0);
    });

</script>
<script>
	$(document).ready(function(){
        var listHCPURL = "@Url.Action("SearchHCPList", "CRM")";
        $("#search-id").autocomplete({
			minLength: 3,
			appendTo: "#ini-medi-list",
            source: function(request, response) {
                $.ajax({
                    url: listHCPURL,
                    async: true,
                    type: 'POST',
                    dataType: "json",
                    data: { search: request.term },
                    success: function (data) {
                        hcp = data.HCPList;
                        response(hcp.slice(0, 20));
                        if (hcp.length == 0) {
                            $(".ini-medi-list").show();
                            $("#no-results").show();
                            $("#ini-medi-list").hide();
                        } else {
                            $("#no-results").hide();
                            $("#ini-medi-list").show();
                        }
                    }
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    RedirectToErrorPage(jqXHR.status);
                });
            },
            select: function (event, ui) {
                $(".ini-medi-list").hide();
                $("#no-results").hide();
                $("#search-id").val(ui.item.label);
                $("#hcp-id").val(ui.item.HCPId);
                $("#hcp-error").removeClass('is-visible');
                $("#HCPFirstName").prop('required', false);
                $("#HCPLastName").prop('required', false);
                $("#Address1").prop('required', false);
                $("#City").prop('required', false);
                $("#CRM_Note_State").prop('required', false);
                $("#Zipcode").prop('required', false);
                $("#PhoneNumber").prop('required', false);
                $("#hcp-id").prop('required', false);
                $("#add-doctor-details").removeClass("is-active");
            }
        })
            .autocomplete("instance")._renderItem = function (ul, item) {
                return $("<li>")
                    .append("<div class='doctor-details-left'><p><span>" + item.label + "</span>" + item.LastName + "</p></div><div class='doctor-details-right'><p><span>" + item.City + "</span>" + item.State + "<p/></div>")
                    .appendTo(ul);
            };
        $("#search-id").on("autocompleteopen", function (event, ui) {
			$(".ini-medi-list").show();

			var pane1 = $('.medi-search-list');
			pane1.jScrollPane({
				showArrows: false,
				resizeSensor: true
			});
			var api1 = pane1.data().jsp;
		});

        $("input#search-id").on('focusout', function (event) {
            if ($(event.relatedTarget).is("a#advancedSearch")) {
                $("#hcp-id").val("");
                $("#HCPFirstName").prop('required', true);
                $("#HCPLastName").prop('required', true);
                $("#Address1").prop('required', true);
                $("#City").prop('required', true);
                $("#CRM_Note_State").prop('required', true);
                $("#Zipcode").prop('required', true);
                $("#PhoneNumber").prop('required', true);
            event.preventDefault();
            $(".ini-medi-list").hide();
            $("#no-results").hide();
            $("#add-doctor-details").addClass("is-active");
            var wt = $(window).width();
            if (wt < 640) {
                $(".left-white-bar").hide();
            }
        }
            else {
            $(".ini-medi-list").hide();
            $("#no-results").hide()
        }
    });
    });

</script>