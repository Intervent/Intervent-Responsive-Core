<!--USER VIEW-->
@using InterventWebApp
@model InterventWebApp.ReportSelectModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<section class="main search-participants labreport-section admin-main-body">
    <div class="control-bar">
        <div class="grid-container">
            <div class="grid-x grid-margin-x scheduler-offset-small-only">
                <div class="small-12 large-6 left cell">
                    @Html.Partial("../AdminReports/_ReportSelect", Model, new ViewDataDictionary(ViewData) { { "Kind", "LabReport" } })
                </div>
            </div>
        </div>
    </div>
    <div class="grid-container">
        <div class="panel filters">
            <fieldset>
                <legend>Report Criteria</legend>
                <div class="grid-x grid-padding-x">
                    <div class="small-12 medium-6 cell">
                        <input id="StartDate" type="text" placeholder="Date From..." />
                        <input id="HStartDate" type="hidden" />
                    </div>
                    <div class="small-12 medium-6 cell">
                        <input id="EndDate" type="text" placeholder="Date To..." />
                        <input id="HEndDate" type="hidden" />
                    </div>
                    <div class="small-12 medium-6 cell">
                        <input id="userid" type="text" placeholder="Id" />
                    </div>
                    <div class="small-12 medium-6 cell">
                        <select id="Alerttype" autocomplete="off" class="primary-select">
                            <option id="1" value="1" selected>All</option>
                            <option id="2" value="2">Coach Alert</option>
                            <option id="3" value="3">Critical Alert</option>
                        </select>
                    </div>
                    <div class="small-12 medium-6 cell">
                        <select id="labsource" autocomplete="off" class="primary-select">
                            <option value="1" selected>Source</option>
                            <option value="2">LabCorp</option>
                            <option value="3">Others</option>
                        </select>
                    </div>
                    <div class="small-12 medium-6 cell">
                        <select id="status" autocomplete="off" class="primary-select">
                            <option value="" selected>--Select Status--</option>
                            <option value="1">Reviewed</option>
                            <option value="2">Not Reviewed</option>
                            <option value="3">In Progress</option>
                        </select>
                    </div>
                    <div class="small-12 medium-6 cell">
                        @Html.DropDownListFor(x => x.Organization, Model.OrganizationList, "--Select Organization--", new Dictionary<string, object> { { "class", "primary-select" } })
                    </div>
                    <div class="small-12 medium-6 cell text-right">
                        <button class="button" id="filter-lab-data">
                            <div class="loading-spinner hide" show-if-submitting></div>
                            <i class="fa fa-filter"></i>
                            Search
                        </button>
                        <button class="secondary-color small" id="download-log-data">
                            <div class="loading-spinner hide" id="download-spinner"></div>
                            <i class="fa fa-download"></i>
                            Download
                        </button>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="small-12 cell">
            <div class="grid-x grid-margin-x tile-item subtext">
                <div class="small-12 cell">
                    <i class='fa fa-bell' aria-hidden='true'></i> Critical Alert
                </div>
            </div>
			<div class="table-container">
				<table class='table basic-table1' id="listReports"></table>
			</div>
        </div>
        <div class="cell small-12">
            <!-- pagination Start -->
            <div class="pagination-area hide" id="pagination-centered">
                <ul>
                    <li id="numeric"></li>
                </ul>
                <!-- page-link Start -->
                <div class="page-link">
                    <label>@Translate.Message("L4041")</label>
                    <div class="grid-x">
                        <input type="text" id="jumptoPageNo">
                        <button type="submit" id="gotoPage_submit" class="button">@Translate.Message("L4042")</button>
                    </div>
                </div>
                <!-- page-link End -->
            </div>
            <!-- pagination End -->
        </div>
    </div>
</section>
<script src="@Url.Content("../Scripts/NewPager.js")?v=@CommonUtility.GetRandom()"></script>
<script src="@Url.Content("../Scripts/downloadcsv.js")?v=@CommonUtility.GetRandom()"></script>
<script>
    var startIndex = 1;
    var pageSize = 15;
    var totalRecords = 0;
    var currentPage = 0;
    var totalPages = 0;
    var download = false;
    $("#StartDate").on("change", function () {
        $('#HStartDate').val(toSystemDateFormat($('#StartDate').val()));
    });
    $("#EndDate").on("change", function () {
        $('#HEndDate').val(toSystemDateFormat($('#EndDate').val()));
    });
    $(document).ready(function () {
        $("#StartDate").fdatepicker({
            format: "@Model.DateFormat.ToLower()",
            endDate: new Date()
        }).on('change', function (selected) {
            var endDate = new Date($("#HEndDate").val());
            var minDate = new Date($("#HStartDate").val());
            if (endDate < minDate) {
                $('#EndDate').fdatepicker('setDate', minDate);
            }
            $('#EndDate').fdatepicker('setStartDate', minDate);
            $("#EndDate").trigger("change");
        });
        $("#EndDate").fdatepicker({
            format: "@Model.DateFormat.ToLower()",
            endDate: new Date()
        });
        @if (Model.tempData != null) {
             @: currentPage = @Model.tempData.page;
             @: totalRecords = @Model.tempData.totalRecords;
             @: $("#StartDate").val('@Model.tempData.startDate');
             @: $("#EndDate").val('@Model.tempData.endDate');
             @: $("#userid").val(@Model.tempData.userId);
             @: $("#Alerttype").val(@Model.tempData.alertType);
             @: $("#labsource").val(@Model.tempData.labsource);
             @: $("#Organization").val(@Model.tempData.organization);
             @: $("#status").val(@Model.tempData.Status);
             @: $('#StartDate').trigger("change");
             @: $('#EndDate').trigger("change");
             @: if ($("#StartDate").val() != ""){
             @:   $("#StartDate").val(toLocalDateFormat($('#StartDate').val()));
             @: $("#StartDate").trigger("change");}
             @: if ($("#EndDate").val() != "") {
             @:   $("#EndDate").val(toLocalDateFormat($('#EndDate').val()));
             @: $("#EndDate").trigger("change");}
             @: ListAlertReport();
        }
        if (window.performance.navigation.type == 1) {
            window.location = "../AdminReports/LabAlertReport";
        }
    });
    $('#filter-lab-data').on('click', function () {
        $('[show-if-submitting]').parent().prop('disabled', 'disabled');
        $('[show-if-submitting]').removeClass('hide');
        startIndex = 0;
        pageSize = 15;
        totalRecords = 0;
        currentPage = 0;
        totalPages = 0;
        download =false;
        ListAlertReport();
    });

    $('#download-log-data').on('click', function () {
        $('#download-spinner').parent().prop('disabled', 'disabled');
        $('#download-spinner').removeClass('hide');
        download = true;
        ListAlertReport();
    });

    function ListAlertReport() {
        var StartDate = $('#HStartDate').val();
        var EndDate = $('#HEndDate').val();
        var Id = $('#userid').val();
        var alertType = $('#Alerttype').val();
        var source = $('#labsource').val();
        var status = $('#status').val();
        var organization = $('#Organization').val();
        $.ajax({
            url: "@Url.Action("ListLabAlert", "AdminReports")",
            data: { page: currentPage, pageSize: pageSize, totalRecords: totalRecords, startDate: StartDate, endDate: EndDate, userId: Id, alertType: alertType, labsource: source, status: status, organization: organization, download : download },
            type: 'POST',
            dataType: "json",
            success: function (data) {
                if(download){
                    var filename = 'labalertlog_' + new Date().toLocaleDateString() + '.csv';
                    downloadCSV(data.Records, filename);
                    download = false;
                }
                else{
                    totalRecords = data.TotalRecords;
                    totalPages = parseInt((totalRecords + pageSize - 1) / pageSize);
                    displayLabReports(data.Records);
                    if (totalRecords <= 0) {
                        $('#listReports').html("<center>No data were found.</center>");
                    }
                    AddPager();
                    $('[show-if-submitting]').parent().prop('disabled', '');
                    $('[show-if-submitting]').addClass('hide');
                }
            }
        }).fail(function (jqXHR, textStatus, errorThrown) {
                RedirectToErrorPage(jqXHR.status);
            });
    }

        function GotoPage(page) {
            currentPage = page;
            startIndex = page * pageSize + 1;
            ListAlertReport();
        }

        function displayLabReports(userdata) {
            $('#listReports').html("");
            var LabAlertHtml = "";
                LabAlertHtml += "<thead><tr><th rowspan='2'>Name</th>";
                LabAlertHtml += " <th rowspan='2'>Alert date</th>";
                LabAlertHtml += " <th rowspan='1' colspan='6' style='text-align: center;'>Alert Type</th>";
                LabAlertHtml += " <th rowspan='2'>Status</th>";
                LabAlertHtml += " <th rowspan='2'>Source</th>";
                LabAlertHtml += " </tr>";
                LabAlertHtml += " <tr>";
                LabAlertHtml += " <th>Glucose</th>";
                LabAlertHtml += " <th>TC </th>";
                LabAlertHtml += " <th>A1C&nbsp; </th>";
                LabAlertHtml += " <th>LDL </th>";
                LabAlertHtml += " <th>Trig</th>";
                LabAlertHtml += " <th>BP </th>";
                LabAlertHtml += " </tr></thead>";
                for (i in userdata)
                {
                    var user = userdata[i];
                    LabAlertHtml += "<tr><td><a style='text-decoration: underline;' class='anchor-blue' onclick='ViewParticipant(" + user.UserId + ")'>" + user.Name + "</td>";
					LabAlertHtml += "<td class='no-wrap'>" + user.AlertDate + "</td>"
                    LabAlertHtml += "<td>";
                        var CriticalAlertHtml = "<i class='fa fa-bell' aria-hidden='true'></i>";
                        var GlucoseAlert = "GLUC;";
                        var CholAlert = "CHOL;";
                        var A1CAlert = "A1c;";
                        var LDLAlert = "LDL;";
                        var TrigAlert = "TRIG;";
                        var BPAlert = "BP;"
                        var alertType = JSON.stringify(user.CoachAlert);
                        var criticalalert = JSON.stringify(user.CriticalAlert);
                        if (alertType.indexOf(GlucoseAlert) >= 0 && criticalalert.indexOf(GlucoseAlert) >= 0) {
                            LabAlertHtml += "Y";
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        else if (alertType.indexOf(GlucoseAlert) >= 0) {
                            LabAlertHtml += "Y";
                        }
                        else if (criticalalert.indexOf(GlucoseAlert) >= 0) {
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        LabAlertHtml += "</td>";
                        LabAlertHtml += "<td>";
                        if (alertType.indexOf(CholAlert) >= 0) {
                            LabAlertHtml += "Y"
                        }
                        LabAlertHtml += "</td>";
                        LabAlertHtml += "<td>";
                        if (alertType.indexOf(A1CAlert) >= 0 && criticalalert.indexOf(A1CAlert) >= 0) {
                            LabAlertHtml += "Y";
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        else if (alertType.indexOf(A1CAlert) >= 0) {
                            LabAlertHtml += "Y";
                        }
                        else if (criticalalert.indexOf(A1CAlert) >= 0) {
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        LabAlertHtml += "</td>";
                        LabAlertHtml += "<td>";
                        if (alertType.indexOf(LDLAlert) >= 0) {
                            LabAlertHtml += "Y";
                        }
                        LabAlertHtml += "</td>";
                        LabAlertHtml += "<td>";
                        if (alertType.indexOf(TrigAlert) >= 0 && criticalalert.indexOf(TrigAlert) >= 0) {
                            LabAlertHtml += "Y";
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        else if (alertType.indexOf(TrigAlert) >= 0) {
                            LabAlertHtml += "Y";
                        }
                        else if (criticalalert.indexOf(TrigAlert) >= 0) {
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        LabAlertHtml += "</td>";
                        LabAlertHtml += "<td>";
                        if (alertType.indexOf(BPAlert) >= 0 && criticalalert.indexOf(BPAlert) >= 0) {
                            LabAlertHtml += "Y";
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        else if (alertType.indexOf(BPAlert) >= 0) {
                            LabAlertHtml += "Y";
                        }
                        else if (criticalalert.indexOf(BPAlert) >= 0) {
                            LabAlertHtml += CriticalAlertHtml;
                        }
                        LabAlertHtml += "</td><td>" + user.Status + "</td>"
                            LabAlertHtml += "</td>"
                            LabAlertHtml += "<td>" + user.Source + "</td></tr>";

                    }
                $('#listReports').append(LabAlertHtml);
        }

        function ViewParticipant(Id) {
            var link = '@Url.Action("ParticipantProfile", "Participant", new { Id = "PId", fromLabReport = true })';
            window.location.href = link.replace("PId", Id)
        }
        function doPrint() {
            window.print();
        }
</script>